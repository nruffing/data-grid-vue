{
	"id": 0,
	"name": "Documentation",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 11,
			"name": "DataType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Supported data types for a column."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 12,
					"name": "none",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 13,
					"name": "alphanumeric",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 14,
					"name": "number",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 15,
					"name": "date",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 3
					}
				},
				{
					"id": 16,
					"name": "dateTime",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 4
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						12,
						13,
						14,
						15,
						16
					]
				}
			]
		},
		{
			"id": 17,
			"name": "Column",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Column definition"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 18,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The value to display in the columns header. If not specified "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Field.fieldName",
										"target": 38,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\nis converted to title casing and displayed as the columns header."
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19,
					"name": "dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DataType",
										"target": 11,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " for the column."
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 11,
						"name": "DataType",
						"package": "data-grid-vue"
					}
				},
				{
					"id": 20,
					"name": "field",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The data "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Field",
										"target": 33,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " for the column. The "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Field",
										"target": 33,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " describes how to get the column's value\nfrom the row's data item."
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33,
						"name": "Field",
						"package": "data-grid-vue"
					}
				},
				{
					"id": 21,
					"name": "isKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Whether to use this columns value as the key for the data item. It is highly recommended to set this\non a single column. If more then one column is set as the key column only the first one is used. If no columns are\nset as the key column then the first column is used."
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 22,
					"name": "sortable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Whether the column should be sortable. This value is ignored if "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DataGridVueGrid.sortOptions",
										"target": 244
									},
									{
										"kind": "text",
										"text": " is\nnot set to turn on sorting for the grid. Setting this property to false will then not allow this specific column\nto be sorted."
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23,
					"name": "filterable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Whether the column should be filterable. If "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "filterOptions",
										"target": 24,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " is not specified then the first\nvalid "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "FilterOperator",
										"target": 106,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " is used for the columns "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DataType",
										"target": 11,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ". Valid filter operators are defined in\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ValidOperatorsMap",
										"target": 116
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 24,
					"name": "filterOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Additional options for how the column's filter behaves including the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "FilterOperator",
										"target": 106,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "s to\nallow the user to select from. Valid filter operators are defined in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ValidOperatorsMap",
										"target": 116
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 27,
						"name": "ColumnFilterOptions",
						"package": "data-grid-vue"
					}
				},
				{
					"id": 25,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Optionally specify an absolute or relative column width. Column widths can be specified with px, % or *.\nBy default columns without a width specified will take up an equal share of the remaining space.\nThe relative * unit can be used to specify a column to take a relational share of the remaining space.\nColumn widths automatically regenerate when the window/page size changes."
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 26,
					"name": "hidden",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Whether the column is currently hidden."
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						18,
						19,
						20,
						21,
						22,
						23,
						24,
						25,
						26
					]
				}
			]
		},
		{
			"id": 27,
			"name": "ColumnFilterOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Additional options for how the column's filter behaves."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 28,
					"name": "operators",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "FilterOperator",
										"target": 106,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "s to allow the user to select from. Valid filter operators are\ndefined in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ValidOperatorsMap",
										"target": 116
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 106,
							"name": "FilterOperator",
							"package": "data-grid-vue"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						28
					]
				}
			]
		},
		{
			"id": 29,
			"name": "FieldValueGetter",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Type for optional callback function to map how to retrieve and/or format the columns\nvalue from the data item. Using this callback will include any data modifications or formatting\nin sorting and filtering. Similar mapping and formatting could be done with the\ncell template slot (i.e. cell-${column.field.fieldName}) but those changes will not\nbe included in any sorting or filtering."
							}
						]
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 30,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 31,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32,
											"name": "dataItem",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					}
				]
			}
		},
		{
			"id": 33,
			"name": "Field",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Field definition for the field on the data item's type. The main purpose is to map\nthat field to a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Column",
								"target": 17,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 38,
					"name": "fieldName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the field. This should be unique across all fields on the data grid.\nIf "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "valueGetter",
								"target": 39,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " is not specified the field name is also assumed to be the property\nname of the desired value on the data item and is used to retrieve the value from the\ndata item using a direct string index."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 39,
					"name": "valueGetter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional callback function to map how to retrieve and/or format the columns\nvalue from the data item. Using this callback will include any data modifications or formatting\nin sorting and filtering. Similar mapping and formatting could be done with the\ncell template slot (i.e. cell-${column.field.fieldName}) but those changes will not\nbe included in any sorting or filtering."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 29,
						"name": "FieldValueGetter",
						"package": "data-grid-vue"
					}
				},
				{
					"id": 34,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 35,
							"name": "new Field",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 36,
									"name": "fieldName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37,
									"name": "valueGetter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 29,
										"name": "FieldValueGetter",
										"package": "data-grid-vue"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 33,
								"name": "Field",
								"package": "data-grid-vue"
							}
						}
					]
				},
				{
					"id": 40,
					"name": "resolveValue",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 41,
							"name": "resolveValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 42,
									"name": "dataItem",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38,
						39
					]
				},
				{
					"title": "Constructors",
					"children": [
						34
					]
				},
				{
					"title": "Methods",
					"children": [
						40
					]
				}
			]
		},
		{
			"id": 43,
			"name": "PageData",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Model definition for the data displaying on the current page."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 44,
					"name": "totalItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total number of data items after current filters are applied across all pages."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 45,
					"name": "dataItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data items for the current page."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						44,
						45
					]
				}
			]
		},
		{
			"id": 47,
			"name": "DataService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Interface to implement to define a data service to retrieve grid data."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 48,
					"name": "getPageAsync",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Called to get data for the currently rendered page."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "pageNum",
								"content": [
									{
										"kind": "text",
										"text": "The page number for the page to load starting with "
									},
									{
										"kind": "code",
										"text": "`1`"
									},
									{
										"kind": "text",
										"text": " for the first page.\nIf the data grid is not set configured to be pageable with the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DataGridVueGrid.paged",
										"target": 229
									},
									{
										"kind": "text",
										"text": "\nprop then this will always be "
									},
									{
										"kind": "code",
										"text": "`-1`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							{
								"tag": "@param",
								"name": "pageSize",
								"content": [
									{
										"kind": "text",
										"text": "The maximum number of data items to display on each page. If the data grid is\nnot set configured to be pageable with the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DataGridVueGrid.paged",
										"target": 229
									},
									{
										"kind": "text",
										"text": " prop then this\nwill always be "
									},
									{
										"kind": "code",
										"text": "`-1`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							{
								"tag": "@param",
								"name": "sort",
								"content": [
									{
										"kind": "text",
										"text": "The current column sort definitions in the order in which they should be applied."
									}
								]
							},
							{
								"tag": "@param",
								"name": "filter",
								"content": [
									{
										"kind": "text",
										"text": "The current filter definition or undefined if no filter is set."
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A Promise that returns the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "PageData",
										"target": 43,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " for the current page."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 49,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 50,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called to get data for the currently rendered page."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "A Promise that returns the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "PageData",
														"target": 43,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " for the current page."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 51,
											"name": "pageNum",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The page number for the page to load starting with "
													},
													{
														"kind": "code",
														"text": "`1`"
													},
													{
														"kind": "text",
														"text": " for the first page.\nIf the data grid is not set configured to be pageable with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "DataGridVueGrid.paged",
														"target": 229
													},
													{
														"kind": "text",
														"text": "\nprop then this will always be "
													},
													{
														"kind": "code",
														"text": "`-1`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 52,
											"name": "pageSize",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maximum number of data items to display on each page. If the data grid is\nnot set configured to be pageable with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "DataGridVueGrid.paged",
														"target": 229
													},
													{
														"kind": "text",
														"text": " prop then this\nwill always be "
													},
													{
														"kind": "code",
														"text": "`-1`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 53,
											"name": "sort",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The current column sort definitions in the order in which they should be applied."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 176,
													"name": "Sort",
													"package": "data-grid-vue"
												}
											}
										},
										{
											"id": 54,
											"name": "filter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The current filter definition or undefined if no filter is set."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"target": 122,
														"name": "Filter",
														"package": "data-grid-vue"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 43,
												"name": "PageData",
												"package": "data-grid-vue"
											}
										],
										"name": "Promise",
										"package": "typescript",
										"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						48
					]
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 56,
					"name": "ClientSideDataService"
				},
				{
					"type": "reference",
					"target": 95,
					"name": "ServerSideDataService"
				}
			]
		},
		{
			"id": 55,
			"name": "StubDataService",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "A stub "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DataService",
								"target": 47,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " that will noop the getPage call and return an empty page data object."
							}
						]
					}
				]
			},
			"type": {
				"type": "reference",
				"target": 47,
				"name": "DataService",
				"package": "data-grid-vue"
			}
		},
		{
			"id": 56,
			"name": "ClientSideDataService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "The client-side "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DataService",
								"target": 47,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " used when "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DataGridVueGrid.data",
								"target": 205
							},
							{
								"kind": "text",
								"text": " is specified."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 60,
					"name": "dataItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 61,
					"name": "previousSortJson",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 62,
					"name": "sorted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 63,
					"name": "previousFilterJson",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 64,
					"name": "filtered",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 57,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 58,
							"name": "new ClientSideDataService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 59,
									"name": "dataItems",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56,
								"name": "ClientSideDataService",
								"package": "data-grid-vue"
							}
						}
					]
				},
				{
					"id": 65,
					"name": "sort",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 66,
							"name": "sort",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 67,
									"name": "sort",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 176,
											"name": "Sort",
											"package": "data-grid-vue"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 68,
					"name": "filter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 69,
							"name": "filter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 70,
									"name": "filter",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 122,
												"name": "Filter",
												"package": "data-grid-vue"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 71,
					"name": "getPageAsync",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Called to get data for the currently rendered page."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "pageNum",
								"content": [
									{
										"kind": "text",
										"text": "The page number for the page to load starting with "
									},
									{
										"kind": "code",
										"text": "`1`"
									},
									{
										"kind": "text",
										"text": " for the first page.\nIf the data grid is not set configured to be pageable with the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DataGridVueGrid.paged",
										"target": 229
									},
									{
										"kind": "text",
										"text": "\nprop then this will always be "
									},
									{
										"kind": "code",
										"text": "`-1`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							{
								"tag": "@param",
								"name": "pageSize",
								"content": [
									{
										"kind": "text",
										"text": "The maximum number of data items to display on each page. If the data grid is\nnot set configured to be pageable with the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DataGridVueGrid.paged",
										"target": 229
									},
									{
										"kind": "text",
										"text": " prop then this\nwill always be "
									},
									{
										"kind": "code",
										"text": "`-1`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							{
								"tag": "@param",
								"name": "sort",
								"content": [
									{
										"kind": "text",
										"text": "The current column sort definitions in the order in which they should be applied."
									}
								]
							},
							{
								"tag": "@param",
								"name": "filter",
								"content": [
									{
										"kind": "text",
										"text": "The current filter definition or undefined if no filter is set."
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A Promise that returns the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "PageData",
										"target": 43,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " for the current page."
									}
								]
							}
						]
					},
					"signatures": [
						{
							"id": 72,
							"name": "getPageAsync",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Called to get data for the currently rendered page."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that returns the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "PageData",
												"target": 43,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " for the current page."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 73,
									"name": "pageNum",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The page number for the page to load starting with "
											},
											{
												"kind": "code",
												"text": "`1`"
											},
											{
												"kind": "text",
												"text": " for the first page.\nIf the data grid is not set configured to be pageable with the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "DataGridVueGrid.paged",
												"target": 229
											},
											{
												"kind": "text",
												"text": "\nprop then this will always be "
											},
											{
												"kind": "code",
												"text": "`-1`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 74,
									"name": "pageSize",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum number of data items to display on each page. If the data grid is\nnot set configured to be pageable with the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "DataGridVueGrid.paged",
												"target": 229
											},
											{
												"kind": "text",
												"text": " prop then this\nwill always be "
											},
											{
												"kind": "code",
												"text": "`-1`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 75,
									"name": "sort",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current column sort definitions in the order in which they should be applied."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 176,
											"name": "Sort",
											"package": "data-grid-vue"
										}
									}
								},
								{
									"id": 76,
									"name": "filter",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current filter definition or undefined if no filter is set."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 122,
												"name": "Filter",
												"package": "data-grid-vue"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 43,
										"name": "PageData",
										"package": "data-grid-vue"
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							},
							"implementationOf": {
								"type": "reference",
								"target": 48,
								"name": "DataService.getPageAsync"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 48,
						"name": "DataService.getPageAsync"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						60,
						61,
						62,
						63,
						64
					]
				},
				{
					"title": "Constructors",
					"children": [
						57
					]
				},
				{
					"title": "Methods",
					"children": [
						65,
						68,
						71
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 47,
					"name": "DataService",
					"package": "data-grid-vue"
				}
			]
		},
		{
			"id": 77,
			"name": "PageDataRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Request data interface sent by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ServerSideDataService",
								"target": 95,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": ". This can be modified before\nthe HTTP request is sent using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "BeforeRequestHandler",
								"target": 82,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " callback on "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ServerSideDataServiceOptions",
								"target": 91,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "dotnet model",
								"target": "https://github.com/nruffing/data-grid-vue-dotnet/blob/main/DataGridVueDotnet/PageDataRequest.cs"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 78,
					"name": "pageNum",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The page number for the page to load starting with "
									},
									{
										"kind": "code",
										"text": "`1`"
									},
									{
										"kind": "text",
										"text": " for the first page.\nIf the data grid is not set configured to be pageable with the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DataGridVueGrid.paged",
										"target": 229
									},
									{
										"kind": "text",
										"text": "\nprop then this will always be "
									},
									{
										"kind": "code",
										"text": "`-1`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 79,
					"name": "pageSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The maximum number of data items to display on each page. If the data grid is\nnot set configured to be pageable with the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DataGridVueGrid.paged",
										"target": 229
									},
									{
										"kind": "text",
										"text": " prop then this\nwill always be "
									},
									{
										"kind": "code",
										"text": "`-1`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 80,
					"name": "sort",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The current column sort definitions in the order in which they should be applied."
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 176,
							"name": "Sort",
							"package": "data-grid-vue"
						}
					}
				},
				{
					"id": 81,
					"name": "filter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The current filter definition or undefined if no filter is set."
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": 122,
								"name": "Filter",
								"package": "data-grid-vue"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						78,
						79,
						80,
						81
					]
				}
			]
		},
		{
			"id": 82,
			"name": "BeforeRequestHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Callback type to change the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Request",
								"target": "https://developer.mozilla.org/docs/Web/API/Request"
							},
							{
								"kind": "text",
								"text": "\nobject before it is sent to the server from the built-in server side data service. This is useful\nwhen you need to map the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PageDataRequest",
								"target": 77,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " to a different data contract."
							}
						]
					},
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "dotnet IQueryable helpers",
								"target": "https://www.nuget.org/packages/DataGridVueDotnet/0.0.1-alpha"
							}
						]
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 83,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 84,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 85,
									"name": "request",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Request"
										},
										"name": "Request",
										"package": "typescript",
										"externalUrl": "https://developer.mozilla.org/docs/Web/API/Request"
									}
								},
								{
									"id": 86,
									"name": "body",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 77,
										"name": "PageDataRequest",
										"package": "data-grid-vue"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Request"
										},
										"name": "Request",
										"package": "typescript",
										"externalUrl": "https://developer.mozilla.org/docs/Web/API/Request"
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							}
						}
					]
				}
			}
		},
		{
			"id": 87,
			"name": "ResponseHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Callback type to change the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Response",
								"target": "https://developer.mozilla.org/docs/Web/API/Response"
							},
							{
								"kind": "text",
								"text": "\nobject before it is handled by the data grid from the built-in server side data service.\nThis is useful when you need to map the servers response data back to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PageData",
								"target": 43,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "dotnet IQueryable helpers",
								"target": "https://www.nuget.org/packages/DataGridVueDotnet/0.0.1-alpha"
							}
						]
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 88,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 89,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 90,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Response"
										},
										"name": "Response",
										"package": "typescript",
										"externalUrl": "https://developer.mozilla.org/docs/Web/API/Response"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 43,
										"name": "PageData",
										"package": "data-grid-vue"
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							}
						}
					]
				}
			}
		},
		{
			"id": 91,
			"name": "ServerSideDataServiceOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Options to configure the built-in server-side data service including the POST url and optional\ncallbacks to alter the data format of the request and response allowing. This allows the built-in data service\nto handle the data contract of any server. The server-side data service will only attempt to deserialize the response\nbody if the HTTP status code is "
							},
							{
								"kind": "code",
								"text": "`200 OK`"
							},
							{
								"kind": "text",
								"text": " and the "
							},
							{
								"kind": "code",
								"text": "`Content-Type`"
							},
							{
								"kind": "text",
								"text": " response header is "
							},
							{
								"kind": "code",
								"text": "`application/json`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ServerSideDataService",
								"target": 95,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "dotnet IQueryable helpers",
								"target": "https://www.nuget.org/packages/DataGridVueDotnet/0.0.1-alpha"
							},
							{
								"kind": "text",
								"text": "\n"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 92,
					"name": "postRoute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The full HTTP/HTTPS url to send the POST request.\nUse "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "beforeRequest",
										"target": 93,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " callback to alter the HTTP verb or headers."
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "URL"
								},
								"name": "URL",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/API/URL"
							}
						]
					}
				},
				{
					"id": 93,
					"name": "beforeRequest",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional callback to change the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Request",
								"target": "https://developer.mozilla.org/docs/Web/API/Request"
							},
							{
								"kind": "text",
								"text": "\nobject before it is sent to the server. This is useful when you need to map the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PageDataRequest",
								"target": 77,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\nto a different data contract."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 82,
						"name": "BeforeRequestHandler",
						"package": "data-grid-vue"
					}
				},
				{
					"id": 94,
					"name": "responseHandler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional callback to change the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Response",
								"target": "https://developer.mozilla.org/docs/Web/API/Response"
							},
							{
								"kind": "text",
								"text": "\nobject before it is handled by the data grid. This is useful when you need to map the servers response\ndata back to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PageData",
								"target": 43,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 87,
						"name": "ResponseHandler",
						"package": "data-grid-vue"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						92,
						93,
						94
					]
				}
			]
		},
		{
			"id": 95,
			"name": "ServerSideDataService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "The server-side "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DataService",
								"target": 47,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " used when "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DataGridVueGrid.serverSideOptions",
								"target": 210
							},
							{
								"kind": "text",
								"text": " is specified.\nThis data service will only attempt to deserialize the response body if the HTTP status code is "
							},
							{
								"kind": "code",
								"text": "`200 OK`"
							},
							{
								"kind": "text",
								"text": " and the\n"
							},
							{
								"kind": "code",
								"text": "`Content-Type`"
							},
							{
								"kind": "text",
								"text": " response header is "
							},
							{
								"kind": "code",
								"text": "`application/json`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 99,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 91,
						"name": "ServerSideDataServiceOptions",
						"package": "data-grid-vue"
					}
				},
				{
					"id": 96,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 97,
							"name": "new ServerSideDataService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 98,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 91,
										"name": "ServerSideDataServiceOptions",
										"package": "data-grid-vue"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 95,
								"name": "ServerSideDataService",
								"package": "data-grid-vue"
							}
						}
					]
				},
				{
					"id": 100,
					"name": "getPageAsync",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Called to get data for the currently rendered page."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "pageNum",
								"content": [
									{
										"kind": "text",
										"text": "The page number for the page to load starting with "
									},
									{
										"kind": "code",
										"text": "`1`"
									},
									{
										"kind": "text",
										"text": " for the first page.\nIf the data grid is not set configured to be pageable with the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DataGridVueGrid.paged",
										"target": 229
									},
									{
										"kind": "text",
										"text": "\nprop then this will always be "
									},
									{
										"kind": "code",
										"text": "`-1`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							{
								"tag": "@param",
								"name": "pageSize",
								"content": [
									{
										"kind": "text",
										"text": "The maximum number of data items to display on each page. If the data grid is\nnot set configured to be pageable with the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DataGridVueGrid.paged",
										"target": 229
									},
									{
										"kind": "text",
										"text": " prop then this\nwill always be "
									},
									{
										"kind": "code",
										"text": "`-1`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							{
								"tag": "@param",
								"name": "sort",
								"content": [
									{
										"kind": "text",
										"text": "The current column sort definitions in the order in which they should be applied."
									}
								]
							},
							{
								"tag": "@param",
								"name": "filter",
								"content": [
									{
										"kind": "text",
										"text": "The current filter definition or undefined if no filter is set."
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A Promise that returns the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "PageData",
										"target": 43,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " for the current page."
									}
								]
							}
						]
					},
					"signatures": [
						{
							"id": 101,
							"name": "getPageAsync",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Called to get data for the currently rendered page."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that returns the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "PageData",
												"target": 43,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " for the current page."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 102,
									"name": "pageNum",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The page number for the page to load starting with "
											},
											{
												"kind": "code",
												"text": "`1`"
											},
											{
												"kind": "text",
												"text": " for the first page.\nIf the data grid is not set configured to be pageable with the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "DataGridVueGrid.paged",
												"target": 229
											},
											{
												"kind": "text",
												"text": "\nprop then this will always be "
											},
											{
												"kind": "code",
												"text": "`-1`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 103,
									"name": "pageSize",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum number of data items to display on each page. If the data grid is\nnot set configured to be pageable with the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "DataGridVueGrid.paged",
												"target": 229
											},
											{
												"kind": "text",
												"text": " prop then this\nwill always be "
											},
											{
												"kind": "code",
												"text": "`-1`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 104,
									"name": "sort",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current column sort definitions in the order in which they should be applied."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 176,
											"name": "Sort",
											"package": "data-grid-vue"
										}
									}
								},
								{
									"id": 105,
									"name": "filter",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current filter definition or undefined if no filter is set."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 122,
												"name": "Filter",
												"package": "data-grid-vue"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 43,
										"name": "PageData",
										"package": "data-grid-vue"
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							},
							"implementationOf": {
								"type": "reference",
								"target": 48,
								"name": "DataService.getPageAsync"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 48,
						"name": "DataService.getPageAsync"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						99
					]
				},
				{
					"title": "Constructors",
					"children": [
						96
					]
				},
				{
					"title": "Methods",
					"children": [
						100
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 47,
					"name": "DataService",
					"package": "data-grid-vue"
				}
			]
		},
		{
			"id": 106,
			"name": "FilterOperator",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Supported filter operators"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 107,
					"name": "equals",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 108,
					"name": "notEquals",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 109,
					"name": "contains",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 110,
					"name": "startsWith",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 3
					}
				},
				{
					"id": 111,
					"name": "endsWith",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 4
					}
				},
				{
					"id": 112,
					"name": "greaterThan",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 5
					}
				},
				{
					"id": 113,
					"name": "lessThan",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 6
					}
				},
				{
					"id": 114,
					"name": "greaterThanOrEqualTo",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 7
					}
				},
				{
					"id": 115,
					"name": "lessThanOrEqualTo",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 8
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						107,
						108,
						109,
						110,
						111,
						112,
						113,
						114,
						115
					]
				}
			]
		},
		{
			"id": 116,
			"name": "ValidOperatorsMap",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Map of which "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "FilterOperator",
								"target": 106,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "s are valid for each "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DataType",
								"target": 11,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": ".\n| Data Type | Valid Operators |\n| --- | --- |\n| none | |\n| alphanumeric | equals, notEquals, contains, startsWith, endsWith |\n| number | equals, notEquals, greaterThan, lessThan, greaterThanOrEqualTo, lessThanOrEqualTo |\n| date | equals, notEquals, greaterThan, lessThan, greaterThanOrEqualTo, lessThanOrEqualTo |\n| dateTime | equals, notEquals, greaterThan, lessThan, greaterThanOrEqualTo, lessThanOrEqualTo |"
							}
						]
					}
				]
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es2015.collection.d.ts",
					"qualifiedName": "Map"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 11,
						"name": "DataType",
						"package": "data-grid-vue"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 106,
								"name": "FilterOperator",
								"package": "data-grid-vue"
							}
						],
						"name": "Set",
						"package": "typescript",
						"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Set"
					}
				],
				"name": "Map",
				"package": "typescript",
				"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Map"
			}
		},
		{
			"id": 117,
			"name": "FilterCondition",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Model definition for the current state of a column filter."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 118,
					"name": "fieldName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the field being filtered by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 119,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "FilterOperator",
								"target": 106,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " being applied."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 106,
						"name": "FilterOperator",
						"package": "data-grid-vue"
					}
				},
				{
					"id": 120,
					"name": "dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DataType",
								"target": 11,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " of the column being filtered."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 11,
						"name": "DataType",
						"package": "data-grid-vue"
					}
				},
				{
					"id": 121,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current filter value."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						118,
						119,
						120,
						121
					]
				}
			]
		},
		{
			"id": 122,
			"name": "Filter",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Model definition for the aggregated filter currently being applied to the entire data grid."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 123,
					"name": "or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Collection of "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "FilterCondition",
								"target": 117,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "s that will be or-ed together."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 117,
							"name": "FilterCondition",
							"package": "data-grid-vue"
						}
					}
				},
				{
					"id": 124,
					"name": "and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Filter",
								"target": 122,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " to and with the current one."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": 122,
								"name": "Filter",
								"package": "data-grid-vue"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						123,
						124
					]
				}
			]
		},
		{
			"id": 158,
			"name": "Formatter",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 159,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 160,
							"name": "fromCamelCase",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 161,
									"name": "fromCamelCase",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Converts camel-cased field name to be title-cased.\nFor example, firstName -> First Name"
											}
										]
									},
									"parameters": [
										{
											"id": 162,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value to convert."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 163,
							"name": "columnTitle",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 164,
									"name": "columnTitle",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Gets the column's title. If the column does not have a title the\ncolumn's field name is converted to title case."
											}
										]
									},
									"parameters": [
										{
											"id": 165,
											"name": "column",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The column to create title for."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17,
												"name": "Column",
												"package": "data-grid-vue"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 166,
							"name": "ariaColumnLabel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 167,
									"name": "ariaColumnLabel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Creates an ARIA label for the column."
											}
										]
									},
									"parameters": [
										{
											"id": 168,
											"name": "column",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The column to create label for.."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 17,
												"name": "Column",
												"package": "data-grid-vue"
											}
										},
										{
											"id": 169,
											"name": "prefix",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								160,
								163,
								166
							]
						}
					]
				}
			}
		},
		{
			"id": 8,
			"name": "DataGridVueOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Additional options when initializing the data-grid-vue plugin."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 9,
					"name": "dataGridComponentName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optionally override the default name that the data grid component will be registered as. By default, "
							},
							{
								"kind": "code",
								"text": "`dgv-data-grid`"
							},
							{
								"kind": "text",
								"text": " will be used."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10,
					"name": "dragonDropVueOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Drag and drop is powered by "
							},
							{
								"kind": "code",
								"text": "`dragon-drop-vue`"
							},
							{
								"kind": "text",
								"text": " and that plugin's options can be overridden here on "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DragonDropVueOptions",
								"target": "https://www.npmjs.com/package/dragon-drop-vue#plugin-options-ie-dragondropvueoptions"
							},
							{
								"kind": "text",
								"text": ".\nThe "
							},
							{
								"kind": "code",
								"text": "`dragDirectiveName`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`dropDirectiveName`"
							},
							{
								"kind": "text",
								"text": " options will be overridden by the "
							},
							{
								"kind": "code",
								"text": "`data-grid-vue`"
							},
							{
								"kind": "text",
								"text": " plugin to "
							},
							{
								"kind": "code",
								"text": "`dgv-drag`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`dgv-drop`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/dragon-drop-vue@2.1.0_vue@3.4.15/node_modules/dragon-drop-vue/dist/types/options.d.ts",
									"qualifiedName": "DragonDropVueOptions"
								},
								"name": "DragonDropVueOptions",
								"package": "dragon-drop-vue"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9,
						10
					]
				}
			]
		},
		{
			"id": 1,
			"name": "DataGridVue",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3,
							"name": "install",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 5,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 6,
													"name": "app",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
															"qualifiedName": "App"
														},
														"name": "App",
														"package": "@vue/runtime-core"
													}
												},
												{
													"id": 7,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 8,
														"name": "DataGridVueOptions",
														"package": "data-grid-vue"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3
							]
						}
					]
				}
			}
		},
		{
			"id": 170,
			"name": "SortOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Grid-level sort options. The grid must be set as sortable for any\ncolumn level sort options to take effect."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 171,
					"name": "sortable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Whether the grid should be sortable."
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 172,
					"name": "multiColumn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Whether more then one column can be sorted at once."
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						171,
						172
					]
				}
			]
		},
		{
			"id": 173,
			"name": "SortType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Whether a sort is ascending or descending."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 174,
					"name": "ascending",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 175,
					"name": "descending",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 1
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						174,
						175
					]
				}
			]
		},
		{
			"id": 176,
			"name": "Sort",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Column sort definition."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 177,
					"name": "fieldName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Column",
										"target": 17
									},
									{
										"kind": "text",
										"text": "."
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Field.fieldName",
										"target": 38
									},
									{
										"kind": "text",
										"text": " that the data is being sorted by."
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 178,
					"name": "dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Column.dataType",
										"target": 19
									},
									{
										"kind": "text",
										"text": " for the column being sorted."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DataType",
										"target": 11,
										"tsLinkText": ""
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 11,
						"name": "DataType",
						"package": "data-grid-vue"
					}
				},
				{
					"id": 179,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SortType",
										"target": 173,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " for the sort (i.e. ascending or descending)."
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 173,
						"name": "SortType",
						"package": "data-grid-vue"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						177,
						178,
						179
					]
				}
			]
		},
		{
			"id": 523,
			"name": "LocalStorageType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Whether grid state is stored in "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "localStorage",
								"target": "https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"
							},
							{
								"kind": "text",
								"text": "\nor "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "sessionStorage",
								"target": "https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DataGridVueGrid.localStorageType",
								"target": 259
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DataGridVueGrid.storageKey",
								"target": 254
							},
							{
								"kind": "text",
								"text": "\n"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 524,
					"name": "sessionStorage",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 525,
					"name": "localStorage",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": 1
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						524,
						525
					]
				}
			]
		},
		{
			"id": 526,
			"name": "GridState",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "The data that is saved as part of the grid state."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 527,
					"name": "pageSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current page size"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 528,
					"name": "hiddenFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field names of the hidden columns"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 529,
					"name": "sort",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current sort definition"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 176,
							"name": "Sort",
							"package": "data-grid-vue"
						}
					}
				},
				{
					"id": 530,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current filter conditions"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 117,
							"name": "FilterCondition",
							"package": "data-grid-vue"
						}
					}
				},
				{
					"id": 531,
					"name": "externalFilter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current external filter if applied"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": 122,
								"name": "Filter",
								"package": "data-grid-vue"
							}
						]
					}
				},
				{
					"id": 532,
					"name": "columnOrder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field name of the columns in the order they are currently displayed"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						527,
						528,
						529,
						530,
						531,
						532
					]
				}
			]
		},
		{
			"id": 533,
			"name": "StorageService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Interface to implement to define a storage service to save and load grid state."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 534,
					"name": "getGridStateAsync",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 535,
							"name": "getGridStateAsync",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Retrieves the saved grid state. This is called once when the data grid component is mounted."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that returns the saved grid state or undefined if no grid state is saved."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 526,
												"name": "GridState",
												"package": "data-grid-vue"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							}
						}
					]
				},
				{
					"id": 536,
					"name": "setGridStateAsync",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 537,
							"name": "setGridStateAsync",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Saves a new version of the grid state. This called every time data in the grid state changes."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that returns when the grid state has been saved."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 538,
									"name": "gridState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The grid state to save"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 526,
										"name": "GridState",
										"package": "data-grid-vue"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						534,
						536
					]
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 540,
					"name": "LocalStorageService"
				},
				{
					"type": "reference",
					"target": 604,
					"name": "ServerSideStorageService"
				},
				{
					"type": "reference",
					"target": 550,
					"name": "SessionStorageService"
				}
			]
		},
		{
			"id": 539,
			"name": "StubStorageService",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "A stub "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "StorageService",
								"target": 533,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " that will just return empty resolved promises."
							}
						]
					}
				]
			},
			"type": {
				"type": "reference",
				"target": 533,
				"name": "StorageService",
				"package": "data-grid-vue"
			}
		},
		{
			"id": 550,
			"name": "SessionStorageService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Storage service that saves grid state in "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "sessionStorage",
								"target": "https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 554,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 551,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 552,
							"name": "new SessionStorageService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 553,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 550,
								"name": "SessionStorageService",
								"package": "data-grid-vue"
							}
						}
					]
				},
				{
					"id": 555,
					"name": "getGridStateAsync",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 556,
							"name": "getGridStateAsync",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Retrieves the saved grid state. This is called once when the data grid component is mounted."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that returns the saved grid state or undefined if no grid state is saved."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 526,
												"name": "GridState",
												"package": "data-grid-vue"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							},
							"implementationOf": {
								"type": "reference",
								"target": 535,
								"name": "StorageService.getGridStateAsync"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 534,
						"name": "StorageService.getGridStateAsync"
					}
				},
				{
					"id": 557,
					"name": "setGridStateAsync",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 558,
							"name": "setGridStateAsync",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Saves a new version of the grid state. This called every time data in the grid state changes."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that returns when the grid state has been saved."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 559,
									"name": "gridState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The grid state to save"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 526,
										"name": "GridState",
										"package": "data-grid-vue"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							},
							"implementationOf": {
								"type": "reference",
								"target": 537,
								"name": "StorageService.setGridStateAsync"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 536,
						"name": "StorageService.setGridStateAsync"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						554
					]
				},
				{
					"title": "Constructors",
					"children": [
						551
					]
				},
				{
					"title": "Methods",
					"children": [
						555,
						557
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 533,
					"name": "StorageService",
					"package": "data-grid-vue"
				}
			]
		},
		{
			"id": 540,
			"name": "LocalStorageService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Storage service that saves grid state in "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "localStorage",
								"target": "https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 544,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 541,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 542,
							"name": "new LocalStorageService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 543,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 540,
								"name": "LocalStorageService",
								"package": "data-grid-vue"
							}
						}
					]
				},
				{
					"id": 545,
					"name": "getGridStateAsync",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 546,
							"name": "getGridStateAsync",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Retrieves the saved grid state. This is called once when the data grid component is mounted."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that returns the saved grid state or undefined if no grid state is saved."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 526,
												"name": "GridState",
												"package": "data-grid-vue"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							},
							"implementationOf": {
								"type": "reference",
								"target": 535,
								"name": "StorageService.getGridStateAsync"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 534,
						"name": "StorageService.getGridStateAsync"
					}
				},
				{
					"id": 547,
					"name": "setGridStateAsync",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 548,
							"name": "setGridStateAsync",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Saves a new version of the grid state. This called every time data in the grid state changes."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that returns when the grid state has been saved."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 549,
									"name": "gridState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The grid state to save"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 526,
										"name": "GridState",
										"package": "data-grid-vue"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							},
							"implementationOf": {
								"type": "reference",
								"target": 537,
								"name": "StorageService.setGridStateAsync"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 536,
						"name": "StorageService.setGridStateAsync"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						544
					]
				},
				{
					"title": "Constructors",
					"children": [
						541
					]
				},
				{
					"title": "Methods",
					"children": [
						545,
						547
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 533,
					"name": "StorageService",
					"package": "data-grid-vue"
				}
			]
		},
		{
			"id": 560,
			"name": "GetGridStateRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Request data interface sent by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ServerSideStorageService",
								"target": 604,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " to get the current grid state."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 561,
					"name": "userId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier for the current user."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 563,
						"name": "TUserId",
						"package": "data-grid-vue",
						"qualifiedName": "GetGridStateRequest.TUserId",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 562,
					"name": "gridId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier for the specific data grid instance."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 564,
						"name": "TGridId",
						"package": "data-grid-vue",
						"qualifiedName": "GetGridStateRequest.TGridId",
						"refersToTypeParameter": true
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						561,
						562
					]
				}
			],
			"typeParameters": [
				{
					"id": 563,
					"name": "TUserId",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the user identifier."
							}
						]
					}
				},
				{
					"id": 564,
					"name": "TGridId",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the grid identifier."
							}
						]
					}
				}
			]
		},
		{
			"id": 565,
			"name": "SetGridStateRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Request data interface sent by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ServerSideStorageService",
								"target": 604,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " to save the current grid state."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 566,
					"name": "userId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier for the current user."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 569,
						"name": "TUserId",
						"package": "data-grid-vue",
						"qualifiedName": "SetGridStateRequest.TUserId",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 567,
					"name": "gridId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier for the specific data grid instance."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 570,
						"name": "TGridId",
						"package": "data-grid-vue",
						"qualifiedName": "SetGridStateRequest.TGridId",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 568,
					"name": "gridState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current grid state to save."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 526,
						"name": "GridState",
						"package": "data-grid-vue"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						566,
						567,
						568
					]
				}
			],
			"typeParameters": [
				{
					"id": 569,
					"name": "TUserId",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the user identifier."
							}
						]
					}
				},
				{
					"id": 570,
					"name": "TGridId",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the grid identifier."
							}
						]
					}
				}
			]
		},
		{
			"id": 571,
			"name": "BeforeGetRequestHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Callback type to change the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Request",
								"target": "https://developer.mozilla.org/docs/Web/API/Request"
							},
							{
								"kind": "text",
								"text": "\nobject before it is sent to the server from the built-in server side storage service. This is useful\nwhen you need to map the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "GetGridStateRequest",
								"target": 560,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " to a different data contract or alter the HTTP verb/headers."
							}
						]
					}
				]
			},
			"typeParameters": [
				{
					"id": 576,
					"name": "TUserId",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the user identifier."
							}
						]
					}
				},
				{
					"id": 577,
					"name": "TGridId",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the grid identifier."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 572,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 573,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 574,
									"name": "request",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Request"
										},
										"name": "Request",
										"package": "typescript",
										"externalUrl": "https://developer.mozilla.org/docs/Web/API/Request"
									}
								},
								{
									"id": 575,
									"name": "body",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 560,
										"typeArguments": [
											{
												"type": "reference",
												"target": 576,
												"name": "TUserId",
												"package": "data-grid-vue",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 577,
												"name": "TGridId",
												"package": "data-grid-vue",
												"refersToTypeParameter": true
											}
										],
										"name": "GetGridStateRequest",
										"package": "data-grid-vue"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Request"
										},
										"name": "Request",
										"package": "typescript",
										"externalUrl": "https://developer.mozilla.org/docs/Web/API/Request"
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							}
						}
					]
				}
			}
		},
		{
			"id": 578,
			"name": "GetResponseHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Callback type to change the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Response",
								"target": "https://developer.mozilla.org/docs/Web/API/Response"
							},
							{
								"kind": "text",
								"text": "\nobject before it is handled by the data grid from the built-in server side storage service.\nThis is useful when you need to map the servers response data back to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "GridState",
								"target": 526,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 579,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 580,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 581,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Response"
										},
										"name": "Response",
										"package": "typescript",
										"externalUrl": "https://developer.mozilla.org/docs/Web/API/Response"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 526,
										"name": "GridState",
										"package": "data-grid-vue"
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							}
						}
					]
				}
			}
		},
		{
			"id": 582,
			"name": "BeforeSetRequestHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Callback type to change the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Request",
								"target": "https://developer.mozilla.org/docs/Web/API/Request"
							},
							{
								"kind": "text",
								"text": "\nobject before it is sent to the server from the built-in server side storage service. This is useful\nwhen you need to map the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "SetGridStateRequest",
								"target": 565,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " to a different data contract or alter the HTTP verb/headers."
							}
						]
					}
				]
			},
			"typeParameters": [
				{
					"id": 587,
					"name": "TUserId",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the user identifier."
							}
						]
					}
				},
				{
					"id": 588,
					"name": "TGridId",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the grid identifier."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 583,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 584,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 585,
									"name": "request",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Request"
										},
										"name": "Request",
										"package": "typescript",
										"externalUrl": "https://developer.mozilla.org/docs/Web/API/Request"
									}
								},
								{
									"id": 586,
									"name": "body",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 565,
										"typeArguments": [
											{
												"type": "reference",
												"target": 587,
												"name": "TUserId",
												"package": "data-grid-vue",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 588,
												"name": "TGridId",
												"package": "data-grid-vue",
												"refersToTypeParameter": true
											}
										],
										"name": "SetGridStateRequest",
										"package": "data-grid-vue"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Request"
										},
										"name": "Request",
										"package": "typescript",
										"externalUrl": "https://developer.mozilla.org/docs/Web/API/Request"
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							}
						}
					]
				}
			}
		},
		{
			"id": 589,
			"name": "SetResponseHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Callback type to change the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Response",
								"target": "https://developer.mozilla.org/docs/Web/API/Response"
							},
							{
								"kind": "text",
								"text": "\nobject before it is handled by the data grid from the built-in server side data service."
							}
						]
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 590,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 591,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 592,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Response"
										},
										"name": "Response",
										"package": "typescript",
										"externalUrl": "https://developer.mozilla.org/docs/Web/API/Response"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							}
						}
					]
				}
			}
		},
		{
			"id": 593,
			"name": "ServerSideStorageServiceOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Options to configure the built-in server-side storage service.\nThe server-side storage service will only attempt to deserialize the response body for "
							},
							{
								"kind": "code",
								"text": "`getGridState`"
							},
							{
								"kind": "text",
								"text": "\nif the HTTP status code is "
							},
							{
								"kind": "code",
								"text": "`200 OK`"
							},
							{
								"kind": "text",
								"text": " and the "
							},
							{
								"kind": "code",
								"text": "`Content-Type`"
							},
							{
								"kind": "text",
								"text": " response header is "
							},
							{
								"kind": "code",
								"text": "`application/json`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ServerSideStorageService",
								"target": 604,
								"tsLinkText": ""
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 594,
					"name": "userId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier for the current user that will be sent to the server with the get and set requests."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 602,
						"name": "TUserId",
						"package": "data-grid-vue",
						"qualifiedName": "ServerSideStorageServiceOptions.TUserId",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 595,
					"name": "gridId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier for the specific data grid instance that will be sent to the server with the get and set requests."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 603,
						"name": "TGridId",
						"package": "data-grid-vue",
						"qualifiedName": "ServerSideStorageServiceOptions.TGridId",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 596,
					"name": "getPostRoute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The full HTTP/HTTPS url to send the POST request to retrieve grid state.\nUse "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "beforeGetRequest",
										"target": 597,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " callback to alter the HTTP verb or headers."
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "URL"
								},
								"name": "URL",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/API/URL"
							}
						]
					}
				},
				{
					"id": 597,
					"name": "beforeGetRequest",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional callback to change the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Request",
								"target": "https://developer.mozilla.org/docs/Web/API/Request"
							},
							{
								"kind": "text",
								"text": "\nobject before it is sent to the server from the built-in server side storage service. This is useful\nwhen you need to map the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "GetGridStateRequest",
								"target": 560,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " to a different data contract or alter the HTTP verb/headers."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 571,
						"typeArguments": [
							{
								"type": "reference",
								"target": 602,
								"name": "TUserId",
								"package": "data-grid-vue",
								"qualifiedName": "ServerSideStorageServiceOptions.TUserId",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 603,
								"name": "TGridId",
								"package": "data-grid-vue",
								"qualifiedName": "ServerSideStorageServiceOptions.TGridId",
								"refersToTypeParameter": true
							}
						],
						"name": "BeforeGetRequestHandler",
						"package": "data-grid-vue"
					}
				},
				{
					"id": 598,
					"name": "getResponseHandler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional callback to change the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Response",
								"target": "https://developer.mozilla.org/docs/Web/API/Response"
							},
							{
								"kind": "text",
								"text": "\nobject before it is handled by the data grid. This is useful when you need to map the servers response\ndata back to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "GridState",
								"target": 526,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 578,
						"name": "GetResponseHandler",
						"package": "data-grid-vue"
					}
				},
				{
					"id": 599,
					"name": "setPostRoute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The full HTTP/HTTPS url to send the POST request to save grid state.\nUse "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "beforeSetRequest",
										"target": 600,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " callback to alter the HTTP verb or headers."
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "URL"
								},
								"name": "URL",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/API/URL"
							}
						]
					}
				},
				{
					"id": 600,
					"name": "beforeSetRequest",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional callback to change the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Request",
								"target": "https://developer.mozilla.org/docs/Web/API/Request"
							},
							{
								"kind": "text",
								"text": "\nobject before it is sent to the server from the built-in server side storage service. This is useful\nwhen you need to map the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "SetGridStateRequest",
								"target": 565,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " to a different data contract or alter the HTTP verb/headers."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 571,
						"typeArguments": [
							{
								"type": "reference",
								"target": 602,
								"name": "TUserId",
								"package": "data-grid-vue",
								"qualifiedName": "ServerSideStorageServiceOptions.TUserId",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 603,
								"name": "TGridId",
								"package": "data-grid-vue",
								"qualifiedName": "ServerSideStorageServiceOptions.TGridId",
								"refersToTypeParameter": true
							}
						],
						"name": "BeforeGetRequestHandler",
						"package": "data-grid-vue"
					}
				},
				{
					"id": 601,
					"name": "setResponseHandler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional callback type to change the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Response",
								"target": "https://developer.mozilla.org/docs/Web/API/Response"
							},
							{
								"kind": "text",
								"text": "\nobject before it is handled by the data grid from the built-in server side data service."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 578,
						"name": "GetResponseHandler",
						"package": "data-grid-vue"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						594,
						595,
						596,
						597,
						598,
						599,
						600,
						601
					]
				}
			],
			"typeParameters": [
				{
					"id": 602,
					"name": "TUserId",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the user identifier."
							}
						]
					}
				},
				{
					"id": 603,
					"name": "TGridId",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the grid identifier."
							}
						]
					}
				}
			]
		},
		{
			"id": 604,
			"name": "ServerSideStorageService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "The server-side "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "StorageService",
								"target": 533,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " used when "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DataGridVueGrid.serverSideStorageOptions",
								"target": 264
							},
							{
								"kind": "text",
								"text": " is specified.\nThis storage service will only attempt to deserialize the response body for "
							},
							{
								"kind": "code",
								"text": "`getGridState`"
							},
							{
								"kind": "text",
								"text": "\nif the HTTP status code is "
							},
							{
								"kind": "code",
								"text": "`200 OK`"
							},
							{
								"kind": "text",
								"text": " and the "
							},
							{
								"kind": "code",
								"text": "`Content-Type`"
							},
							{
								"kind": "text",
								"text": " response header is "
							},
							{
								"kind": "code",
								"text": "`application/json`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 610,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 593,
						"typeArguments": [
							{
								"type": "reference",
								"target": 607,
								"name": "TUserId",
								"package": "data-grid-vue",
								"qualifiedName": "ServerSideStorageService.TUserId",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 608,
								"name": "TGridId",
								"package": "data-grid-vue",
								"qualifiedName": "ServerSideStorageService.TGridId",
								"refersToTypeParameter": true
							}
						],
						"name": "ServerSideStorageServiceOptions",
						"package": "data-grid-vue"
					}
				},
				{
					"id": 605,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 606,
							"name": "new ServerSideStorageService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"typeParameter": [
								{
									"id": 607,
									"name": "TUserId",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 608,
									"name": "TGridId",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 609,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 593,
										"typeArguments": [
											{
												"type": "reference",
												"target": 607,
												"name": "TUserId",
												"package": "data-grid-vue",
												"qualifiedName": "ServerSideStorageService.TUserId",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 608,
												"name": "TGridId",
												"package": "data-grid-vue",
												"qualifiedName": "ServerSideStorageService.TGridId",
												"refersToTypeParameter": true
											}
										],
										"name": "ServerSideStorageServiceOptions",
										"package": "data-grid-vue"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 604,
								"typeArguments": [
									{
										"type": "reference",
										"target": 607,
										"name": "TUserId",
										"package": "data-grid-vue",
										"qualifiedName": "ServerSideStorageService.TUserId",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 608,
										"name": "TGridId",
										"package": "data-grid-vue",
										"qualifiedName": "ServerSideStorageService.TGridId",
										"refersToTypeParameter": true
									}
								],
								"name": "ServerSideStorageService",
								"package": "data-grid-vue"
							}
						}
					]
				},
				{
					"id": 611,
					"name": "getGridStateAsync",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 612,
							"name": "getGridStateAsync",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Retrieves the saved grid state. This is called once when the data grid component is mounted."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that returns the saved grid state or undefined if no grid state is saved."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 526,
												"name": "GridState",
												"package": "data-grid-vue"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							},
							"implementationOf": {
								"type": "reference",
								"target": 535,
								"name": "StorageService.getGridStateAsync"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 534,
						"name": "StorageService.getGridStateAsync"
					}
				},
				{
					"id": 613,
					"name": "setGridStateAsync",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 614,
							"name": "setGridStateAsync",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Saves a new version of the grid state. This called every time data in the grid state changes."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A Promise that returns when the grid state has been saved."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 615,
									"name": "gridState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The grid state to save"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 526,
										"name": "GridState",
										"package": "data-grid-vue"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript",
								"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"
							},
							"implementationOf": {
								"type": "reference",
								"target": 537,
								"name": "StorageService.setGridStateAsync"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 536,
						"name": "StorageService.setGridStateAsync"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						610
					]
				},
				{
					"title": "Constructors",
					"children": [
						605
					]
				},
				{
					"title": "Methods",
					"children": [
						611,
						613
					]
				}
			],
			"typeParameters": [
				{
					"id": 616,
					"name": "TUserId",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the user identifier."
							}
						]
					}
				},
				{
					"id": 617,
					"name": "TGridId",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the grid identifier."
							}
						]
					}
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 533,
					"name": "StorageService",
					"package": "data-grid-vue"
				}
			]
		},
		{
			"id": 417,
			"name": "ColumnSelectionItem",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Column toggle item displayed in the column selected menu."
							}
						]
					},
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DataGridVueGrid.showColumnSelection",
								"target": 249
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 419,
					"name": "column",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Column",
										"target": 17,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " to show or hide."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 420,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 421,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
											"qualifiedName": "PropType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17,
												"name": "Column",
												"package": "data-grid-vue"
											}
										],
										"name": "PropType",
										"package": "@vue/runtime-core"
									}
								},
								{
									"id": 422,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										421,
										422
									]
								}
							]
						}
					}
				},
				{
					"id": 424,
					"name": "hidden-updated",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 425,
							"name": "hidden-updated",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Event emitted when the shown/hidden state of the column has been updated."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 426,
									"name": "hidden",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The new hidden state of the column."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "props",
					"children": [
						419
					]
				},
				{
					"title": "emits",
					"children": [
						424
					]
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "node_modules/.pnpm/vue@3.4.15_typescript@5.3.3/node_modules/vue/dist/vue.d.mts",
					"qualifiedName": ""
				},
				"name": "DefineComponent",
				"package": "vue"
			}
		},
		{
			"id": 203,
			"name": "DataGridVueGrid",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "Main entrypoint component to render a data grid."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 205,
					"name": "data",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Array of objects to display in the data grid when using the built-in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ClientSideDataService",
										"target": 56
									},
									{
										"kind": "text",
										"text": ".\nThis prop is required unless serverSideOptions or customDataService is supplied. The order of precedence\nis "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "customDataService",
										"target": 215
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "serverSideOptions",
										"target": 210
									},
									{
										"kind": "text",
										"text": ", and then "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "data",
										"target": 205
									},
									{
										"kind": "text",
										"text": ".\nThe data grid will not react and rerender when this property changes. If that functionality is needed it is recommended\nto leverage "
									},
									{
										"kind": "code",
										"text": "`v-if`"
									},
									{
										"kind": "text",
										"text": " to force a new component instance to render."
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nundefined\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 206,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 207,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
											"qualifiedName": "PropType"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "PropType",
										"package": "@vue/runtime-core"
									}
								},
								{
									"id": 208,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 209,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										207,
										208,
										209
									]
								}
							]
						}
					}
				},
				{
					"id": 210,
					"name": "serverSideOptions",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Options to configure the built-in server-side data service including the POST url and optional\ncallbacks to alter the data format of the request and response allowing. This allows the built-in data service\nto handle the data contract of any server. "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ServerSideDataService",
										"target": 95
									},
									{
										"kind": "text",
										"text": " is used unless "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "customDataService",
										"target": 215
									},
									{
										"kind": "text",
										"text": "\nis also specified."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "dotnet IQueryable helpers",
										"target": "https://www.nuget.org/packages/DataGridVueDotnet/0.0.1-alpha"
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nundefined\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 211,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 212,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
											"qualifiedName": "PropType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 91,
												"name": "ServerSideDataServiceOptions",
												"package": "data-grid-vue"
											}
										],
										"name": "PropType",
										"package": "@vue/runtime-core"
									}
								},
								{
									"id": 213,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 214,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										212,
										213,
										214
									]
								}
							]
						}
					}
				},
				{
					"id": 215,
					"name": "customDataService",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Custom implementation of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DataService",
										"target": 47,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " to supply the grid's data. When this is specified\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "data",
										"target": 205
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "serverSideOptions",
										"target": 210
									},
									{
										"kind": "text",
										"text": " are ignored."
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nundefined\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 216,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 217,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
											"qualifiedName": "PropType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 47,
												"name": "DataService",
												"package": "data-grid-vue"
											}
										],
										"name": "PropType",
										"package": "@vue/runtime-core"
									}
								},
								{
									"id": 218,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 219,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										217,
										218,
										219
									]
								}
							]
						}
					}
				},
				{
					"id": 220,
					"name": "columns",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Column",
										"target": 17,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " definitions to configure data grid columns including header title, column width, custom data getter,\nand column specific filtering and sorting options. It is recommended to supply an array of objects with "
									},
									{
										"kind": "code",
										"text": "`v-model:columns`"
									},
									{
										"kind": "text",
										"text": " since\nthat is required for column reordering and allowing users to show/hide specific columns to rerender the columns.\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Column",
										"target": 17,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " objects will not be mutated but a new array will be emitted with the "
									},
									{
										"kind": "code",
										"text": "`update:columns`"
									},
									{
										"kind": "text",
										"text": " event and that needs to trigger\nthis property to get an updated value. The grid will react to any change to this prop which can be leveraged to implement custom\nfunctionality to do things like allowing users to add/remove columns."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 221,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 222,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
											"qualifiedName": "PropType"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 17,
													"name": "Column",
													"package": "data-grid-vue"
												}
											}
										],
										"name": "PropType",
										"package": "@vue/runtime-core"
									}
								},
								{
									"id": 223,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										222,
										223
									]
								}
							]
						}
					}
				},
				{
					"id": 224,
					"name": "allowColumnReorder",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Whether to allow columns to be reordered using drag-and-drop\npowered by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "drag-drop-vue",
										"target": "https://www.npmjs.com/package/dragon-drop-vue"
									},
									{
										"kind": "text",
										"text": ".\nIn order for columns to rerender after dropping "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "columns",
										"target": 220
									},
									{
										"kind": "text",
										"text": " should be passed using "
									},
									{
										"kind": "code",
										"text": "`v-model:columns`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 225,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 226,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "BooleanConstructor"
										},
										"name": "BooleanConstructor",
										"package": "typescript"
									}
								},
								{
									"id": 227,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 228,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										226,
										227,
										228
									]
								}
							]
						}
					}
				},
				{
					"id": 229,
					"name": "paged",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Whether the data grid should be paged. When this is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "PageDataRequest.pageNum",
										"target": 78
									},
									{
										"kind": "text",
										"text": " and\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "PageDataRequest.pageSize",
										"target": 79
									},
									{
										"kind": "text",
										"text": " will be -1."
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ntrue\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 230,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 231,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "BooleanConstructor"
										},
										"name": "BooleanConstructor",
										"package": "typescript"
									}
								},
								{
									"id": 232,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 233,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										231,
										232,
										233
									]
								}
							]
						}
					}
				},
				{
					"id": 234,
					"name": "initialPageSize",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The page size to use when the grid initially loads."
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n15\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 235,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 236,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "NumberConstructor"
										},
										"name": "NumberConstructor",
										"package": "typescript"
									}
								},
								{
									"id": 237,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 238,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										236,
										237,
										238
									]
								}
							]
						}
					}
				},
				{
					"id": 239,
					"name": "pageSizes",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The page sizes to allow the user to select between. The page size select\nwill only be displayed if this array contains more then one value."
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n[15, 25, 50]\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 240,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 241,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
											"qualifiedName": "PropType"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"name": "PropType",
										"package": "@vue/runtime-core"
									}
								},
								{
									"id": 242,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 243,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										241,
										242,
										243
									]
								}
							]
						}
					}
				},
				{
					"id": 244,
					"name": "sortOptions",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Grid-level "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SortOptions",
										"target": 170,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " including whether to allow sorting and if more then\none column can be sorted at a time. The grid must be set as sortable for any column level sort\noptions to take effect."
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nundefined\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 245,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 246,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
											"qualifiedName": "PropType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 170,
												"name": "SortOptions",
												"package": "data-grid-vue"
											}
										],
										"name": "PropType",
										"package": "@vue/runtime-core"
									}
								},
								{
									"id": 247,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 248,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										246,
										247,
										248
									]
								}
							]
						}
					}
				},
				{
					"id": 249,
					"name": "showColumnSelection",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Whether to display the "
									},
									{
										"kind": "code",
										"text": "`Add/Remove Columns`"
									},
									{
										"kind": "text",
										"text": " menu in the options header. Column selection\ncan be set externally using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Column.hidden",
										"target": 26,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " property. For this functionality to work correctly\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "columns",
										"target": 220
									},
									{
										"kind": "text",
										"text": " should be passed using "
									},
									{
										"kind": "code",
										"text": "`v-model:columns`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 250,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 251,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "BooleanConstructor"
										},
										"name": "BooleanConstructor",
										"package": "typescript"
									}
								},
								{
									"id": 252,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 253,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										251,
										252,
										253
									]
								}
							]
						}
					}
				},
				{
					"id": 254,
					"name": "storageKey",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "A key to use to save grid state in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "localStorage",
										"target": "https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"
									},
									{
										"kind": "text",
										"text": "\nor "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "sessionStorage",
										"target": "https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage"
									},
									{
										"kind": "text",
										"text": ".\nsessionStorage is used unless "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "localStorageType",
										"target": 259
									},
									{
										"kind": "text",
										"text": " is specified. The data\nthat is saved as part of the grid state is defined in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "GridState",
										"target": 526,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\nThis is ignored if "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "serverSideStorageOptions",
										"target": 264
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "customStorageService",
										"target": 269
									},
									{
										"kind": "text",
										"text": " is specified."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SessionStorageService",
										"target": 550
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "LocalStorageService",
										"target": 540
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n''\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 255,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 256,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "StringConstructor"
										},
										"name": "StringConstructor",
										"package": "typescript"
									}
								},
								{
									"id": 257,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 258,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										256,
										257,
										258
									]
								}
							]
						}
					}
				},
				{
					"id": 259,
					"name": "localStorageType",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Whether grid state is stored in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "localStorage",
										"target": "https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"
									},
									{
										"kind": "text",
										"text": "\nor "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "sessionStorage",
										"target": "https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage"
									},
									{
										"kind": "text",
										"text": ".\nTo save grid state "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "storageKey",
										"target": 254
									},
									{
										"kind": "text",
										"text": " must be specified.The data\nthat is saved as part of the grid state is defined in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "GridState",
										"target": 526,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\nThis is ignored if "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "serverSideStorageOptions",
										"target": 264
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "customStorageService",
										"target": 269
									},
									{
										"kind": "text",
										"text": " is specified."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SessionStorageService",
										"target": 550
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "LocalStorageService",
										"target": 540
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nLocalStorageType.sessionStorage\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 260,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 261,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "NumberConstructor"
										},
										"name": "NumberConstructor",
										"package": "typescript"
									}
								},
								{
									"id": 262,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 263,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 523,
										"name": "LocalStorageType",
										"package": "data-grid-vue"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										261,
										262,
										263
									]
								}
							]
						}
					}
				},
				{
					"id": 264,
					"name": "serverSideStorageOptions",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Options to specify to use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ServerSideStorageService",
										"target": 604
									},
									{
										"kind": "text",
										"text": " to retrieve and store "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "GridState",
										"target": 526,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "storageKey",
										"target": 254
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "localStorageType",
										"target": 259
									},
									{
										"kind": "text",
										"text": " are ignored if this is specified. This is ignored if\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "customStorageService",
										"target": 269
									},
									{
										"kind": "text",
										"text": " is specified."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ServerSideStorageServiceOptions",
										"target": 593,
										"tsLinkText": ""
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nundefined\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 265,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 266,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
											"qualifiedName": "PropType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 593,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ServerSideStorageServiceOptions",
												"package": "data-grid-vue"
											}
										],
										"name": "PropType",
										"package": "@vue/runtime-core"
									}
								},
								{
									"id": 267,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 268,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										266,
										267,
										268
									]
								}
							]
						}
					}
				},
				{
					"id": 269,
					"name": "customStorageService",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Custom implementation of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StorageService",
										"target": 533,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " to optionally retrieve/store "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "GridState",
										"target": 526,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\nWhen this is specified "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "storageKey",
										"target": 254
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "localStorageType",
										"target": 259
									},
									{
										"kind": "text",
										"text": ", and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "serverSideStorageOptions",
										"target": 264
									},
									{
										"kind": "text",
										"text": " are ignored."
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nundefined\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 270,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 271,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
											"qualifiedName": "PropType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 533,
												"name": "StorageService",
												"package": "data-grid-vue"
											}
										],
										"name": "PropType",
										"package": "@vue/runtime-core"
									}
								},
								{
									"id": 272,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 273,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										271,
										272,
										273
									]
								}
							]
						}
					}
				},
				{
					"id": 401,
					"name": "filter-${column.field.fieldName}",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Slot to override the filter for the specified column. For example, the slot name "
									},
									{
										"kind": "code",
										"text": "`filter-id`"
									},
									{
										"kind": "text",
										"text": " would override the filter for the column with a field with the name "
									},
									{
										"kind": "code",
										"text": "`id`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 279,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 280,
									"name": "column",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Column",
												"target": 17,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 17,
										"name": "Column",
										"package": "data-grid-vue"
									}
								},
								{
									"id": 281,
									"name": "initialFilterCondition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "FilterCondition",
												"target": 117,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " applied to the column."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 117,
										"name": "FilterCondition",
										"package": "data-grid-vue"
									}
								},
								{
									"id": 282,
									"name": "onFilterUpdated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to call when the filter condition has been updated to trigger the grid state to update. The function has a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "FilterCondition",
												"target": 117,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " parameter to pass the new condition."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "(condition) => any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										280,
										281,
										282
									]
								}
							]
						}
					}
				},
				{
					"id": 402,
					"name": "cell-${column.field.fieldName}",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Slot to override the cell for the specified column. For example, the slot name "
									},
									{
										"kind": "code",
										"text": "`cell-id`"
									},
									{
										"kind": "text",
										"text": " would override the cell for the column with a field with the name "
									},
									{
										"kind": "code",
										"text": "`id`"
									},
									{
										"kind": "text",
										"text": ".\nAny data modifications or formatting done as part of the cell template will not be taken into account for filtering and sorting. If the desired behavior is to also sort and filter\nbased on the formatted value use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Field.valueGetter",
										"target": 39
									},
									{
										"kind": "text",
										"text": " instead."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 290,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 291,
									"name": "dataItem",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The entire data item for the current row."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										291
									]
								}
							]
						}
					}
				},
				{
					"id": 403,
					"name": "options-header",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Slot to override what is rendered in the options header above the data grid."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 296,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 297,
									"name": "toggleFilterOptionsShown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to call to toggle whether to display the filter row below the data grid's header."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "() => any"
									}
								},
								{
									"id": 300,
									"name": "toggleColumnSelectionShown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to call to toggle whether to display the column selection menu.\nThe function has a single Event parameter which is the click  or key event that triggered the toggle."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "(event) => any"
									}
								},
								{
									"id": 304,
									"name": "clearFilters",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to call to clear all current filter state."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "() => any"
									}
								},
								{
									"id": 307,
									"name": "filter",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current filter state"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 122,
												"name": "Filter",
												"package": "data-grid-vue"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 308,
									"name": "filterOptionsShown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether or not the filter row is currently displayed."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 309,
									"name": "filterSummary",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A string summary of the current filters applied to the data grid."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 310,
									"name": "clearSort",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to call to clear all current sort state."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "() => any"
									}
								},
								{
									"id": 313,
									"name": "sort",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current sort state"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 176,
											"name": "Sort",
											"package": "data-grid-vue"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										297,
										300,
										304,
										307,
										308,
										309,
										310,
										313
									]
								}
							]
						}
					}
				},
				{
					"id": 404,
					"name": "options-header-filter-options-shown",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Slot to override just the toggle column filters area of the options header above the grid."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 318,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 319,
									"name": "toggleFilterOptionsShown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to call to toggle whether to display the filter row below the data grid's header."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "() => any"
									}
								},
								{
									"id": 322,
									"name": "filterOptionsShown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether or not the filter row is currently displayed."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										319,
										322
									]
								}
							]
						}
					}
				},
				{
					"id": 405,
					"name": "options-header-clear-filters",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Slot to override just the clear filters area of the options header above the grid."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 327,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 328,
									"name": "clearFilters",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to call to clear all current filter state."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "() => any"
									}
								},
								{
									"id": 331,
									"name": "filter",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current filter state"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 122,
												"name": "Filter",
												"package": "data-grid-vue"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 332,
									"name": "filterSummary",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A string summary of the current filters applied to the data grid."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 333,
									"name": "clearSort",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to call to clear all current sort state."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "() => any"
									}
								},
								{
									"id": 336,
									"name": "sort",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current sort state"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 176,
											"name": "Sort",
											"package": "data-grid-vue"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										328,
										331,
										332,
										333,
										336
									]
								}
							]
						}
					}
				},
				{
					"id": 406,
					"name": "options-header-column-selection-shown",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Slot to override just the add/remove columns area of the options header above the grid."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 341,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 342,
									"name": "toggleColumnSelectionShown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to call to toggle whether to display the column selection menu.\nThe function has a single Event parameter which is the click  or key event that triggered the toggle."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "(event) => any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										342
									]
								}
							]
						}
					}
				},
				{
					"id": 407,
					"name": "column-selection-popup",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Slot to override what is rendered in the add/remove columns menu."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 350,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 351,
									"name": "columns",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "All current column state."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17,
											"name": "Column",
											"package": "data-grid-vue"
										}
									}
								},
								{
									"id": 352,
									"name": "onHiddenUpdated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to call when the hidden state of a column should be changed. The function has a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Column",
												"target": 17,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " parameter and a boolean hidden parameter."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "(column, hidden) => any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										351,
										352
									]
								}
							]
						}
					}
				},
				{
					"id": 408,
					"name": "footer",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Slot to override the entire footer of the data grid."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 361,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 362,
									"name": "paged",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the grid is paged."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 363,
									"name": "currentPage",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current page number starting with "
											},
											{
												"kind": "code",
												"text": "`1`"
											},
											{
												"kind": "text",
												"text": " for the first page."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 364,
									"name": "pageSize",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current page size."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 365,
									"name": "totalItems",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The total number of items in the grid after all filter conditions have been applied."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 366,
									"name": "onCurrentPageChangedAsync",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to call when the current page changes. Promise resolves when the new page data is loaded."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "(page) => Promise<any>"
									}
								},
								{
									"id": 370,
									"name": "onPageSizeChangedAsync",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to call when the page size has changed. Promise resolves when the new page data is loaded."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "(pageSize) => Promise<any>"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										362,
										363,
										364,
										365,
										366,
										370
									]
								}
							]
						}
					}
				},
				{
					"id": 409,
					"name": "footer-page-size-select",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Slot to override the page size select in the footer of the data grid."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 378,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 379,
									"name": "pageSize",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current page size."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 380,
									"name": "pageSizes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The page sizes to allow the user to select between."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 381,
									"name": "onPageSizeChangedAsync",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to call when the page size has changed. Promise resolves when the new page data is loaded."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "(pageSize) => Promise<any>"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										379,
										380,
										381
									]
								}
							]
						}
					}
				},
				{
					"id": 410,
					"name": "footer-additional-content",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Slot to add custom content to the footer of the data grid. The content is rendered after the page size select."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 389,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {}
						}
					}
				},
				{
					"id": 411,
					"name": "footer-total-items",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Slot to override the total items in the footer of the data grid."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 394,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 395,
									"name": "totalItems",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The total number of items in the grid after all filter conditions have been applied."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										395
									]
								}
							]
						}
					}
				},
				{
					"id": 412,
					"name": "loader",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Slot to override the loader that is displayed when the data grid is loading page data."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 400,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {}
						}
					}
				},
				{
					"id": 414,
					"name": "update:columns",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 415,
							"name": "update:columns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Event emitted when "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Column",
												"target": 17,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " state is updated. This includes the column's hidden state and column order.\n"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Column",
												"target": 17,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " objects will not be mutated but a new array will be emitted with this event and that needs to trigger\nthe columns prop to update. Leveraging "
											},
											{
												"kind": "code",
												"text": "`v-model:columns`"
											},
											{
												"kind": "text",
												"text": " is recommended."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 416,
									"name": "columns",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A clone of the new column state."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 17,
											"name": "Column",
											"package": "data-grid-vue"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "props",
					"children": [
						205,
						210,
						215,
						220,
						224,
						229,
						234,
						239,
						244,
						249,
						254,
						259,
						264,
						269
					]
				},
				{
					"title": "emits",
					"children": [
						414
					]
				},
				{
					"title": "slots",
					"children": [
						401,
						402,
						403,
						404,
						405,
						406,
						407,
						408,
						409,
						410,
						411,
						412
					]
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "node_modules/.pnpm/vue@3.4.15_typescript@5.3.3/node_modules/vue/dist/vue.d.mts",
					"qualifiedName": ""
				},
				"name": "DefineComponent",
				"package": "vue"
			}
		},
		{
			"id": 427,
			"name": "FilterOperatorSelect",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "The filter operator select control that is displayed when a column\nis configured with more then one filter operator."
							}
						]
					},
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Column.filterable",
								"target": 23
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Column.filterOptions",
								"target": 24
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "FilterOperator",
								"target": 106,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 429,
					"name": "operators",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "FilterOperator",
										"target": 106,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " values configured on the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Column",
										"target": 17
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 430,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 431,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
											"qualifiedName": "PropType"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 106,
													"name": "FilterOperator",
													"package": "data-grid-vue"
												}
											}
										],
										"name": "PropType",
										"package": "@vue/runtime-core"
									}
								},
								{
									"id": 432,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										431,
										432
									]
								}
							]
						}
					}
				},
				{
					"id": 433,
					"name": "modelValue",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The selected "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "FilterOperator",
										"target": 106,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nFilterOperator.equals\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 434,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 435,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
											"qualifiedName": "PropType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 106,
												"name": "FilterOperator",
												"package": "data-grid-vue"
											}
										],
										"name": "PropType",
										"package": "@vue/runtime-core"
									}
								},
								{
									"id": 436,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 437,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 106,
										"name": "FilterOperator",
										"package": "data-grid-vue"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										435,
										436,
										437
									]
								}
							]
						}
					}
				},
				{
					"id": 439,
					"name": "update:modelValue",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 440,
							"name": "update:modelValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Event emitted when the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "FilterOperator",
												"target": 106,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " state has been updated."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 441,
									"name": "operator",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The new "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "FilterOperator",
												"target": 106,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " state."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 106,
										"name": "FilterOperator",
										"package": "data-grid-vue"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "props",
					"children": [
						429,
						433
					]
				},
				{
					"title": "emits",
					"children": [
						439
					]
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "node_modules/.pnpm/vue@3.4.15_typescript@5.3.3/node_modules/vue/dist/vue.d.mts",
					"qualifiedName": ""
				},
				"name": "DefineComponent",
				"package": "vue"
			}
		},
		{
			"id": 442,
			"name": "HeaderCell",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "The header cell for each column."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 444,
					"name": "column",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Column",
										"target": 17,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " being rendered."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 445,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 446,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
											"qualifiedName": "PropType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17,
												"name": "Column",
												"package": "data-grid-vue"
											}
										],
										"name": "PropType",
										"package": "@vue/runtime-core"
									}
								},
								{
									"id": 447,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										446,
										447
									]
								}
							]
						}
					}
				},
				{
					"id": 448,
					"name": "sortable",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Whether sorting is enabled at the grid-level."
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 449,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 450,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "BooleanConstructor"
										},
										"name": "BooleanConstructor",
										"package": "typescript"
									}
								},
								{
									"id": 451,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 452,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										450,
										451,
										452
									]
								}
							]
						}
					}
				},
				{
					"id": 453,
					"name": "sort",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The current sort for the entire data grid."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 454,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 455,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
											"qualifiedName": "PropType"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 176,
													"name": "Sort",
													"package": "data-grid-vue"
												}
											}
										],
										"name": "PropType",
										"package": "@vue/runtime-core"
									}
								},
								{
									"id": 456,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										455,
										456
									]
								}
							]
						}
					}
				},
				{
					"id": 457,
					"name": "allowColumnReorder",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Whether to allow columns to be reordered using drag-and-drop\npowered by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "drag-drop-vue",
										"target": "https://www.npmjs.com/package/dragon-drop-vue"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 458,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 459,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "BooleanConstructor"
										},
										"name": "BooleanConstructor",
										"package": "typescript"
									}
								},
								{
									"id": 460,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										459,
										460
									]
								}
							]
						}
					}
				},
				{
					"id": 461,
					"name": "columnIndex",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The zero-based index of the column that defines the current column order."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 462,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 463,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "NumberConstructor"
										},
										"name": "NumberConstructor",
										"package": "typescript"
									}
								},
								{
									"id": 464,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										463,
										464
									]
								}
							]
						}
					}
				},
				{
					"id": 465,
					"name": "totalColumnCount",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The total number of columns in the grid."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 466,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 467,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "NumberConstructor"
										},
										"name": "NumberConstructor",
										"package": "typescript"
									}
								},
								{
									"id": 468,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										467,
										468
									]
								}
							]
						}
					}
				},
				{
					"id": 470,
					"name": "onClick",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 471,
							"name": "onClick",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Event emitted when the header cell is clicked.\nThis is also emitted when the space bar is pressed and the header cell is focused."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 472,
									"name": "columnIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The zero-based index of the column that defines the current column order."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 473,
					"name": "onLeft",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 474,
							"name": "onLeft",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Event emitted when the left arrow key is pressed and the header cell is focused."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 475,
									"name": "columnIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The zero-based index of the column that defines the current column order."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 476,
					"name": "onRight",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 477,
							"name": "onRight",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Event emitted when the right arrow key is pressed and the header cell is focused."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 478,
									"name": "columnIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The zero-based index of the column that defines the current column order."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "props",
					"children": [
						444,
						448,
						453,
						457,
						461,
						465
					]
				},
				{
					"title": "emits",
					"children": [
						470,
						473,
						476
					]
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "node_modules/.pnpm/vue@3.4.15_typescript@5.3.3/node_modules/vue/dist/vue.d.mts",
					"qualifiedName": ""
				},
				"name": "DefineComponent",
				"package": "vue"
			}
		},
		{
			"id": 479,
			"name": "HeaderFilter",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "The filter for a column."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 481,
					"name": "column",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Column",
										"target": 17,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " currently being rendered."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 482,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 483,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
											"qualifiedName": "PropType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 17,
												"name": "Column",
												"package": "data-grid-vue"
											}
										],
										"name": "PropType",
										"package": "@vue/runtime-core"
									}
								},
								{
									"id": 484,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										483,
										484
									]
								}
							]
						}
					}
				},
				{
					"id": 485,
					"name": "initialFilterCondition",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "FilterCondition",
										"target": 117,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " for the current column."
									}
								]
							},
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nundefined\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 486,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 487,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@vue+runtime-core@3.4.15/node_modules/@vue/runtime-core/dist/runtime-core.d.ts",
											"qualifiedName": "PropType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 117,
												"name": "FilterCondition",
												"package": "data-grid-vue"
											}
										],
										"name": "PropType",
										"package": "@vue/runtime-core"
									}
								},
								{
									"id": 488,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 489,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										487,
										488,
										489
									]
								}
							]
						}
					}
				},
				{
					"id": 491,
					"name": "updated",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 492,
							"name": "updated",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Event emitted when the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "FilterCondition",
												"target": 117,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " is updated."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 493,
									"name": "condition",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The updated "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "FilterCondition",
												"target": 117,
												"tsLinkText": ""
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 117,
										"name": "FilterCondition",
										"package": "data-grid-vue"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "props",
					"children": [
						481,
						485
					]
				},
				{
					"title": "emits",
					"children": [
						491
					]
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "node_modules/.pnpm/vue@3.4.15_typescript@5.3.3/node_modules/vue/dist/vue.d.mts",
					"qualifiedName": ""
				},
				"name": "DefineComponent",
				"package": "vue"
			}
		},
		{
			"id": 494,
			"name": "Icon",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 496,
					"name": "name",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 497,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 498,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "StringConstructor"
										},
										"name": "StringConstructor",
										"package": "typescript"
									}
								},
								{
									"id": 499,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										498,
										499
									]
								}
							]
						}
					}
				},
				{
					"id": 500,
					"name": "text",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 501,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 502,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "StringConstructor"
										},
										"name": "StringConstructor",
										"package": "typescript"
									}
								},
								{
									"id": 503,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": false
									}
								},
								{
									"id": 504,
									"name": "default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										502,
										503,
										504
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "props",
					"children": [
						496,
						500
					]
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "node_modules/.pnpm/vue@3.4.15_typescript@5.3.3/node_modules/vue/dist/vue.d.mts",
					"qualifiedName": ""
				},
				"name": "DefineComponent",
				"package": "vue"
			}
		},
		{
			"id": 505,
			"name": "PageNavigation",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@description",
						"content": [
							{
								"kind": "text",
								"text": "The page navigation in the grids footer."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 507,
					"name": "pageSize",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The current page size."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 508,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 509,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "NumberConstructor"
										},
										"name": "NumberConstructor",
										"package": "typescript"
									}
								},
								{
									"id": 510,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										509,
										510
									]
								}
							]
						}
					}
				},
				{
					"id": 511,
					"name": "currentPage",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The current page number starting with "
									},
									{
										"kind": "code",
										"text": "`1`"
									},
									{
										"kind": "text",
										"text": " for the first page."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 512,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 513,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "NumberConstructor"
										},
										"name": "NumberConstructor",
										"package": "typescript"
									}
								},
								{
									"id": 514,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										513,
										514
									]
								}
							]
						}
					}
				},
				{
					"id": 515,
					"name": "totalItems",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "The total number of items in the grid after all filter conditions\nhave been applied."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 516,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 517,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "NumberConstructor"
										},
										"name": "NumberConstructor",
										"package": "typescript"
									}
								},
								{
									"id": 518,
									"name": "required",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										517,
										518
									]
								}
							]
						}
					}
				},
				{
					"id": 520,
					"name": "update:currentPage",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 521,
							"name": "update:currentPage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Event emitted when the page changes."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 522,
									"name": "page",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The new page number."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "props",
					"children": [
						507,
						511,
						515
					]
				},
				{
					"title": "emits",
					"children": [
						520
					]
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "node_modules/.pnpm/vue@3.4.15_typescript@5.3.3/node_modules/vue/dist/vue.d.mts",
					"qualifiedName": ""
				},
				"name": "DefineComponent",
				"package": "vue"
			}
		}
	],
	"groups": [
		{
			"title": "Data Grid Component",
			"children": [
				203
			]
		},
		{
			"title": "Components",
			"children": [
				417,
				427,
				442,
				479,
				494,
				505
			]
		},
		{
			"title": "Column",
			"children": [
				11,
				17,
				27,
				29,
				33
			]
		},
		{
			"title": "Filter",
			"children": [
				106,
				116,
				117,
				122
			]
		},
		{
			"title": "Sort",
			"children": [
				170,
				173,
				176
			]
		},
		{
			"title": "Data Service",
			"children": [
				43,
				47,
				55,
				56,
				77,
				82,
				87,
				91,
				95
			]
		},
		{
			"title": "Storage Service",
			"children": [
				523,
				526,
				533,
				539,
				550,
				540,
				560,
				565,
				571,
				578,
				582,
				589,
				593,
				604
			]
		},
		{
			"title": "Plugin",
			"children": [
				8,
				1
			]
		},
		{
			"title": "Utilities",
			"children": [
				158
			]
		}
	],
	"packageName": "data-grid-vue",
	"symbolIdMap": {
		"0": {
			"sourceFileName": "dist/types/main.d.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "dist/types/Plugin.d.ts",
			"qualifiedName": "DataGridVue"
		},
		"2": {
			"sourceFileName": "dist/types/Plugin.d.ts",
			"qualifiedName": "__type"
		},
		"3": {
			"sourceFileName": "dist/types/Plugin.d.ts",
			"qualifiedName": "__type.install"
		},
		"4": {
			"sourceFileName": "dist/types/Plugin.d.ts",
			"qualifiedName": "__type"
		},
		"5": {
			"sourceFileName": "dist/types/Plugin.d.ts",
			"qualifiedName": "__type"
		},
		"6": {
			"sourceFileName": "dist/types/Plugin.d.ts",
			"qualifiedName": "app"
		},
		"7": {
			"sourceFileName": "dist/types/Plugin.d.ts",
			"qualifiedName": "options"
		},
		"8": {
			"sourceFileName": "dist/types/Plugin.d.ts",
			"qualifiedName": "DataGridVueOptions"
		},
		"9": {
			"sourceFileName": "dist/types/Plugin.d.ts",
			"qualifiedName": "DataGridVueOptions.dataGridComponentName"
		},
		"10": {
			"sourceFileName": "dist/types/Plugin.d.ts",
			"qualifiedName": "DataGridVueOptions.dragonDropVueOptions"
		},
		"11": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "DataType"
		},
		"12": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "DataType.none"
		},
		"13": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "DataType.alphanumeric"
		},
		"14": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "DataType.number"
		},
		"15": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "DataType.date"
		},
		"16": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "DataType.dateTime"
		},
		"17": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Column"
		},
		"18": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Column.title"
		},
		"19": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Column.dataType"
		},
		"20": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Column.field"
		},
		"21": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Column.isKey"
		},
		"22": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Column.sortable"
		},
		"23": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Column.filterable"
		},
		"24": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Column.filterOptions"
		},
		"25": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Column.width"
		},
		"26": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Column.hidden"
		},
		"27": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "ColumnFilterOptions"
		},
		"28": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "ColumnFilterOptions.operators"
		},
		"29": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "FieldValueGetter"
		},
		"30": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "__type"
		},
		"31": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "__type"
		},
		"32": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "dataItem"
		},
		"33": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Field"
		},
		"34": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Field.__constructor"
		},
		"35": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Field"
		},
		"36": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "fieldName"
		},
		"37": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "valueGetter"
		},
		"38": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Field.fieldName"
		},
		"39": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Field.valueGetter"
		},
		"40": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Field.resolveValue"
		},
		"41": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "Field.resolveValue"
		},
		"42": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "dataItem"
		},
		"43": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "PageData"
		},
		"44": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "PageData.totalItems"
		},
		"45": {
			"sourceFileName": "dist/types/DataGridVue.d.ts",
			"qualifiedName": "PageData.dataItems"
		},
		"47": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "DataService"
		},
		"48": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "DataService.getPageAsync"
		},
		"49": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "__type"
		},
		"50": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "__type"
		},
		"51": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "pageNum"
		},
		"52": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "pageSize"
		},
		"53": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "sort"
		},
		"54": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "filter"
		},
		"55": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "StubDataService"
		},
		"56": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ClientSideDataService"
		},
		"57": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ClientSideDataService.__constructor"
		},
		"58": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ClientSideDataService"
		},
		"59": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "dataItems"
		},
		"60": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ClientSideDataService.dataItems"
		},
		"61": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ClientSideDataService.previousSortJson"
		},
		"62": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ClientSideDataService.sorted"
		},
		"63": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ClientSideDataService.previousFilterJson"
		},
		"64": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ClientSideDataService.filtered"
		},
		"65": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ClientSideDataService.sort"
		},
		"66": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ClientSideDataService.sort"
		},
		"67": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "sort"
		},
		"68": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ClientSideDataService.filter"
		},
		"69": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ClientSideDataService.filter"
		},
		"70": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "filter"
		},
		"71": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ClientSideDataService.getPageAsync"
		},
		"72": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ClientSideDataService.getPageAsync"
		},
		"73": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "pageNum"
		},
		"74": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "pageSize"
		},
		"75": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "sort"
		},
		"76": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "filter"
		},
		"77": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "PageDataRequest"
		},
		"78": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "PageDataRequest.pageNum"
		},
		"79": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "PageDataRequest.pageSize"
		},
		"80": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "PageDataRequest.sort"
		},
		"81": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "PageDataRequest.filter"
		},
		"82": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "BeforeRequestHandler"
		},
		"83": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "__type"
		},
		"84": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "__type"
		},
		"85": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "request"
		},
		"86": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "body"
		},
		"87": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ResponseHandler"
		},
		"88": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "__type"
		},
		"89": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "__type"
		},
		"90": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "response"
		},
		"91": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ServerSideDataServiceOptions"
		},
		"92": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ServerSideDataServiceOptions.postRoute"
		},
		"93": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ServerSideDataServiceOptions.beforeRequest"
		},
		"94": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ServerSideDataServiceOptions.responseHandler"
		},
		"95": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ServerSideDataService"
		},
		"96": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ServerSideDataService.__constructor"
		},
		"97": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ServerSideDataService"
		},
		"98": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "options"
		},
		"99": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ServerSideDataService.options"
		},
		"100": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ServerSideDataService.getPageAsync"
		},
		"101": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "ServerSideDataService.getPageAsync"
		},
		"102": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "pageNum"
		},
		"103": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "pageSize"
		},
		"104": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "sort"
		},
		"105": {
			"sourceFileName": "dist/types/DataService.d.ts",
			"qualifiedName": "filter"
		},
		"106": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "FilterOperator"
		},
		"107": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "FilterOperator.equals"
		},
		"108": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "FilterOperator.notEquals"
		},
		"109": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "FilterOperator.contains"
		},
		"110": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "FilterOperator.startsWith"
		},
		"111": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "FilterOperator.endsWith"
		},
		"112": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "FilterOperator.greaterThan"
		},
		"113": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "FilterOperator.lessThan"
		},
		"114": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "FilterOperator.greaterThanOrEqualTo"
		},
		"115": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "FilterOperator.lessThanOrEqualTo"
		},
		"116": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "ValidOperatorsMap"
		},
		"117": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "FilterCondition"
		},
		"118": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "FilterCondition.fieldName"
		},
		"119": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "FilterCondition.operator"
		},
		"120": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "FilterCondition.dataType"
		},
		"121": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "FilterCondition.value"
		},
		"122": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "Filter"
		},
		"123": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "Filter.or"
		},
		"124": {
			"sourceFileName": "dist/types/Filter.d.ts",
			"qualifiedName": "Filter.and"
		},
		"158": {
			"sourceFileName": "dist/types/Formatter.d.ts",
			"qualifiedName": "_default"
		},
		"159": {
			"sourceFileName": "dist/types/Formatter.d.ts",
			"qualifiedName": "__type"
		},
		"160": {
			"sourceFileName": "dist/types/Formatter.d.ts",
			"qualifiedName": "__type.fromCamelCase"
		},
		"161": {
			"sourceFileName": "dist/types/Formatter.d.ts",
			"qualifiedName": "__type.fromCamelCase"
		},
		"162": {
			"sourceFileName": "dist/types/Formatter.d.ts",
			"qualifiedName": "value"
		},
		"163": {
			"sourceFileName": "dist/types/Formatter.d.ts",
			"qualifiedName": "__type.columnTitle"
		},
		"164": {
			"sourceFileName": "dist/types/Formatter.d.ts",
			"qualifiedName": "__type.columnTitle"
		},
		"165": {
			"sourceFileName": "dist/types/Formatter.d.ts",
			"qualifiedName": "column"
		},
		"166": {
			"sourceFileName": "dist/types/Formatter.d.ts",
			"qualifiedName": "__type.ariaColumnLabel"
		},
		"167": {
			"sourceFileName": "dist/types/Formatter.d.ts",
			"qualifiedName": "__type.ariaColumnLabel"
		},
		"168": {
			"sourceFileName": "dist/types/Formatter.d.ts",
			"qualifiedName": "column"
		},
		"169": {
			"sourceFileName": "dist/types/Formatter.d.ts",
			"qualifiedName": "prefix"
		},
		"170": {
			"sourceFileName": "dist/types/Sort.d.ts",
			"qualifiedName": "SortOptions"
		},
		"171": {
			"sourceFileName": "dist/types/Sort.d.ts",
			"qualifiedName": "SortOptions.sortable"
		},
		"172": {
			"sourceFileName": "dist/types/Sort.d.ts",
			"qualifiedName": "SortOptions.multiColumn"
		},
		"173": {
			"sourceFileName": "dist/types/Sort.d.ts",
			"qualifiedName": "SortType"
		},
		"174": {
			"sourceFileName": "dist/types/Sort.d.ts",
			"qualifiedName": "SortType.ascending"
		},
		"175": {
			"sourceFileName": "dist/types/Sort.d.ts",
			"qualifiedName": "SortType.descending"
		},
		"176": {
			"sourceFileName": "dist/types/Sort.d.ts",
			"qualifiedName": "Sort"
		},
		"177": {
			"sourceFileName": "dist/types/Sort.d.ts",
			"qualifiedName": "Sort.fieldName"
		},
		"178": {
			"sourceFileName": "dist/types/Sort.d.ts",
			"qualifiedName": "Sort.dataType"
		},
		"179": {
			"sourceFileName": "dist/types/Sort.d.ts",
			"qualifiedName": "Sort.type"
		},
		"203": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "_default"
		},
		"204": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"205": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.data"
		},
		"206": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"207": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"208": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"209": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"210": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.serverSideOptions"
		},
		"211": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"212": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"213": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"214": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"215": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.customDataService"
		},
		"216": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"217": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"218": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"219": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"220": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.columns"
		},
		"221": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"222": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"223": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"224": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.allowColumnReorder"
		},
		"225": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"226": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"227": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"228": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"229": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.paged"
		},
		"230": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"231": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"232": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"233": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"234": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.initialPageSize"
		},
		"235": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"236": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"237": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"238": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"239": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.pageSizes"
		},
		"240": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"241": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"242": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"243": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"244": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.sortOptions"
		},
		"245": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"246": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"247": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"248": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"249": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.showColumnSelection"
		},
		"250": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"251": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"252": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"253": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"254": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.storageKey"
		},
		"255": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"256": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"257": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"258": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"259": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.localStorageType"
		},
		"260": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"261": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"262": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"263": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"264": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.serverSideStorageOptions"
		},
		"265": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"266": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"267": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"268": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"269": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.customStorageService"
		},
		"270": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"271": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"272": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"273": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"274": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"275": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.filter-${column.field.fieldName}"
		},
		"276": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"277": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"278": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "props"
		},
		"279": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"280": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.column"
		},
		"281": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.initialFilterCondition"
		},
		"282": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.onFilterUpdated"
		},
		"283": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"284": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"285": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "condition"
		},
		"286": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.cell-${column.field.fieldName}"
		},
		"287": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"288": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"289": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "props"
		},
		"290": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"291": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.dataItem"
		},
		"292": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.options-header"
		},
		"293": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"294": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"295": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "props"
		},
		"296": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"297": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.toggleFilterOptionsShown"
		},
		"298": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"299": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"300": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.toggleColumnSelectionShown"
		},
		"301": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"302": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"303": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "event"
		},
		"304": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.clearFilters"
		},
		"305": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"306": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"307": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.filter"
		},
		"308": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.filterOptionsShown"
		},
		"309": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.filterSummary"
		},
		"310": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.clearSort"
		},
		"311": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"312": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"313": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.sort"
		},
		"314": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.options-header-filter-options-shown"
		},
		"315": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"316": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"317": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "props"
		},
		"318": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"319": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.toggleFilterOptionsShown"
		},
		"320": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"321": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"322": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.filterOptionsShown"
		},
		"323": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.options-header-clear-filters"
		},
		"324": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"325": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"326": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "props"
		},
		"327": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"328": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.clearFilters"
		},
		"329": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"330": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"331": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.filter"
		},
		"332": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.filterSummary"
		},
		"333": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.clearSort"
		},
		"334": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"335": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"336": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.sort"
		},
		"337": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.options-header-column-selection-shown"
		},
		"338": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"339": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"340": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "props"
		},
		"341": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"342": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.toggleColumnSelectionShown"
		},
		"343": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"344": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"345": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "event"
		},
		"346": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.column-selection-popup"
		},
		"347": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"348": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"349": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "props"
		},
		"350": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"351": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.columns"
		},
		"352": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.onHiddenUpdated"
		},
		"353": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"354": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"355": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "column"
		},
		"356": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "hidden"
		},
		"357": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.footer"
		},
		"358": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"359": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"360": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "props"
		},
		"361": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"362": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.paged"
		},
		"363": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.currentPage"
		},
		"364": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.pageSize"
		},
		"365": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.totalItems"
		},
		"366": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.onCurrentPageChangedAsync"
		},
		"367": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"368": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"369": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "page"
		},
		"370": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.onPageSizeChangedAsync"
		},
		"371": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"372": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"373": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "pageSize"
		},
		"374": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.footer-page-size-select"
		},
		"375": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"376": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"377": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "props"
		},
		"378": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"379": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.pageSize"
		},
		"380": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.pageSizes"
		},
		"381": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.onPageSizeChangedAsync"
		},
		"382": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"383": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"384": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "pageSize"
		},
		"385": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.footer-additional-content"
		},
		"386": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"387": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"388": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "props"
		},
		"389": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"390": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.footer-total-items"
		},
		"391": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"392": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"393": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "props"
		},
		"394": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"395": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.totalItems"
		},
		"396": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.loader"
		},
		"397": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"398": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"399": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "props"
		},
		"400": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"413": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type"
		},
		"414": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.update:columns"
		},
		"415": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "__type.update:columns"
		},
		"416": {
			"sourceFileName": "dist/types/components/DataGridVue.vue.d.ts",
			"qualifiedName": "columns"
		},
		"417": {
			"sourceFileName": "dist/types/components/ColumnSelectionItem.vue.d.ts",
			"qualifiedName": "_default"
		},
		"418": {
			"sourceFileName": "dist/types/components/ColumnSelectionItem.vue.d.ts",
			"qualifiedName": "__type"
		},
		"419": {
			"sourceFileName": "dist/types/components/ColumnSelectionItem.vue.d.ts",
			"qualifiedName": "__type.column"
		},
		"420": {
			"sourceFileName": "dist/types/components/ColumnSelectionItem.vue.d.ts",
			"qualifiedName": "__type"
		},
		"421": {
			"sourceFileName": "dist/types/components/ColumnSelectionItem.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"422": {
			"sourceFileName": "dist/types/components/ColumnSelectionItem.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"423": {
			"sourceFileName": "dist/types/components/ColumnSelectionItem.vue.d.ts",
			"qualifiedName": "__type"
		},
		"424": {
			"sourceFileName": "dist/types/components/ColumnSelectionItem.vue.d.ts",
			"qualifiedName": "__type.hidden-updated"
		},
		"425": {
			"sourceFileName": "dist/types/components/ColumnSelectionItem.vue.d.ts",
			"qualifiedName": "__type.hidden-updated"
		},
		"426": {
			"sourceFileName": "dist/types/components/ColumnSelectionItem.vue.d.ts",
			"qualifiedName": "hidden"
		},
		"427": {
			"sourceFileName": "dist/types/components/FilterOperatorSelect.vue.d.ts",
			"qualifiedName": "_default"
		},
		"428": {
			"sourceFileName": "dist/types/components/FilterOperatorSelect.vue.d.ts",
			"qualifiedName": "__type"
		},
		"429": {
			"sourceFileName": "dist/types/components/FilterOperatorSelect.vue.d.ts",
			"qualifiedName": "__type.operators"
		},
		"430": {
			"sourceFileName": "dist/types/components/FilterOperatorSelect.vue.d.ts",
			"qualifiedName": "__type"
		},
		"431": {
			"sourceFileName": "dist/types/components/FilterOperatorSelect.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"432": {
			"sourceFileName": "dist/types/components/FilterOperatorSelect.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"433": {
			"sourceFileName": "dist/types/components/FilterOperatorSelect.vue.d.ts",
			"qualifiedName": "__type.modelValue"
		},
		"434": {
			"sourceFileName": "dist/types/components/FilterOperatorSelect.vue.d.ts",
			"qualifiedName": "__type"
		},
		"435": {
			"sourceFileName": "dist/types/components/FilterOperatorSelect.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"436": {
			"sourceFileName": "dist/types/components/FilterOperatorSelect.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"437": {
			"sourceFileName": "dist/types/components/FilterOperatorSelect.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"438": {
			"sourceFileName": "dist/types/components/FilterOperatorSelect.vue.d.ts",
			"qualifiedName": "__type"
		},
		"439": {
			"sourceFileName": "dist/types/components/FilterOperatorSelect.vue.d.ts",
			"qualifiedName": "__type.update:modelValue"
		},
		"440": {
			"sourceFileName": "dist/types/components/FilterOperatorSelect.vue.d.ts",
			"qualifiedName": "__type.update:modelValue"
		},
		"441": {
			"sourceFileName": "dist/types/components/FilterOperatorSelect.vue.d.ts",
			"qualifiedName": "operator"
		},
		"442": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "_default"
		},
		"443": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type"
		},
		"444": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.column"
		},
		"445": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type"
		},
		"446": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"447": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"448": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.sortable"
		},
		"449": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type"
		},
		"450": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"451": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"452": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"453": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.sort"
		},
		"454": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type"
		},
		"455": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"456": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"457": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.allowColumnReorder"
		},
		"458": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type"
		},
		"459": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"460": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"461": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.columnIndex"
		},
		"462": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type"
		},
		"463": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"464": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"465": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.totalColumnCount"
		},
		"466": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type"
		},
		"467": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"468": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"469": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type"
		},
		"470": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.onClick"
		},
		"471": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.onClick"
		},
		"472": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "columnIndex"
		},
		"473": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.onLeft"
		},
		"474": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.onLeft"
		},
		"475": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "columnIndex"
		},
		"476": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.onRight"
		},
		"477": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "__type.onRight"
		},
		"478": {
			"sourceFileName": "dist/types/components/HeaderCell.vue.d.ts",
			"qualifiedName": "columnIndex"
		},
		"479": {
			"sourceFileName": "dist/types/components/HeaderFilter.vue.d.ts",
			"qualifiedName": "_default"
		},
		"480": {
			"sourceFileName": "dist/types/components/HeaderFilter.vue.d.ts",
			"qualifiedName": "__type"
		},
		"481": {
			"sourceFileName": "dist/types/components/HeaderFilter.vue.d.ts",
			"qualifiedName": "__type.column"
		},
		"482": {
			"sourceFileName": "dist/types/components/HeaderFilter.vue.d.ts",
			"qualifiedName": "__type"
		},
		"483": {
			"sourceFileName": "dist/types/components/HeaderFilter.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"484": {
			"sourceFileName": "dist/types/components/HeaderFilter.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"485": {
			"sourceFileName": "dist/types/components/HeaderFilter.vue.d.ts",
			"qualifiedName": "__type.initialFilterCondition"
		},
		"486": {
			"sourceFileName": "dist/types/components/HeaderFilter.vue.d.ts",
			"qualifiedName": "__type"
		},
		"487": {
			"sourceFileName": "dist/types/components/HeaderFilter.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"488": {
			"sourceFileName": "dist/types/components/HeaderFilter.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"489": {
			"sourceFileName": "dist/types/components/HeaderFilter.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"490": {
			"sourceFileName": "dist/types/components/HeaderFilter.vue.d.ts",
			"qualifiedName": "__type"
		},
		"491": {
			"sourceFileName": "dist/types/components/HeaderFilter.vue.d.ts",
			"qualifiedName": "__type.updated"
		},
		"492": {
			"sourceFileName": "dist/types/components/HeaderFilter.vue.d.ts",
			"qualifiedName": "__type.updated"
		},
		"493": {
			"sourceFileName": "dist/types/components/HeaderFilter.vue.d.ts",
			"qualifiedName": "condition"
		},
		"494": {
			"sourceFileName": "dist/types/components/Icon.vue.d.ts",
			"qualifiedName": "_default"
		},
		"495": {
			"sourceFileName": "dist/types/components/Icon.vue.d.ts",
			"qualifiedName": "__type"
		},
		"496": {
			"sourceFileName": "dist/types/components/Icon.vue.d.ts",
			"qualifiedName": "__type.name"
		},
		"497": {
			"sourceFileName": "dist/types/components/Icon.vue.d.ts",
			"qualifiedName": "__type"
		},
		"498": {
			"sourceFileName": "dist/types/components/Icon.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"499": {
			"sourceFileName": "dist/types/components/Icon.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"500": {
			"sourceFileName": "dist/types/components/Icon.vue.d.ts",
			"qualifiedName": "__type.text"
		},
		"501": {
			"sourceFileName": "dist/types/components/Icon.vue.d.ts",
			"qualifiedName": "__type"
		},
		"502": {
			"sourceFileName": "dist/types/components/Icon.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"503": {
			"sourceFileName": "dist/types/components/Icon.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"504": {
			"sourceFileName": "dist/types/components/Icon.vue.d.ts",
			"qualifiedName": "__type.default"
		},
		"505": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "_default"
		},
		"506": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type"
		},
		"507": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type.pageSize"
		},
		"508": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type"
		},
		"509": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"510": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"511": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type.currentPage"
		},
		"512": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type"
		},
		"513": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"514": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"515": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type.totalItems"
		},
		"516": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type"
		},
		"517": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type.type"
		},
		"518": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type.required"
		},
		"519": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type"
		},
		"520": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type.update:currentPage"
		},
		"521": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "__type.update:currentPage"
		},
		"522": {
			"sourceFileName": "dist/types/components/PageNavigation.vue.d.ts",
			"qualifiedName": "page"
		},
		"523": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "LocalStorageType"
		},
		"524": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "LocalStorageType.sessionStorage"
		},
		"525": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "LocalStorageType.localStorage"
		},
		"526": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "GridState"
		},
		"527": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "GridState.pageSize"
		},
		"528": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "GridState.hiddenFields"
		},
		"529": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "GridState.sort"
		},
		"530": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "GridState.filters"
		},
		"531": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "GridState.externalFilter"
		},
		"532": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "GridState.columnOrder"
		},
		"533": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "StorageService"
		},
		"534": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "StorageService.getGridStateAsync"
		},
		"535": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "StorageService.getGridStateAsync"
		},
		"536": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "StorageService.setGridStateAsync"
		},
		"537": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "StorageService.setGridStateAsync"
		},
		"538": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "gridState"
		},
		"539": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "StubStorageService"
		},
		"540": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "LocalStorageService"
		},
		"541": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "LocalStorageService.__constructor"
		},
		"542": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "LocalStorageService"
		},
		"543": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "key"
		},
		"544": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "LocalStorageService.key"
		},
		"545": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "LocalStorageService.getGridStateAsync"
		},
		"546": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "LocalStorageService.getGridStateAsync"
		},
		"547": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "LocalStorageService.setGridStateAsync"
		},
		"548": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "LocalStorageService.setGridStateAsync"
		},
		"549": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "gridState"
		},
		"550": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "SessionStorageService"
		},
		"551": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "SessionStorageService.__constructor"
		},
		"552": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "SessionStorageService"
		},
		"553": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "key"
		},
		"554": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "SessionStorageService.key"
		},
		"555": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "SessionStorageService.getGridStateAsync"
		},
		"556": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "SessionStorageService.getGridStateAsync"
		},
		"557": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "SessionStorageService.setGridStateAsync"
		},
		"558": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "SessionStorageService.setGridStateAsync"
		},
		"559": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "gridState"
		},
		"560": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "GetGridStateRequest"
		},
		"561": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "GetGridStateRequest.userId"
		},
		"562": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "GetGridStateRequest.gridId"
		},
		"563": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "GetGridStateRequest.TUserId"
		},
		"564": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "GetGridStateRequest.TGridId"
		},
		"565": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "SetGridStateRequest"
		},
		"566": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "SetGridStateRequest.userId"
		},
		"567": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "SetGridStateRequest.gridId"
		},
		"568": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "SetGridStateRequest.gridState"
		},
		"569": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "SetGridStateRequest.TUserId"
		},
		"570": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "SetGridStateRequest.TGridId"
		},
		"571": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "BeforeGetRequestHandler"
		},
		"572": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "__type"
		},
		"573": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "__type"
		},
		"574": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "request"
		},
		"575": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "body"
		},
		"576": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "TUserId"
		},
		"577": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "TGridId"
		},
		"578": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "GetResponseHandler"
		},
		"579": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "__type"
		},
		"580": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "__type"
		},
		"581": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "response"
		},
		"582": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "BeforeSetRequestHandler"
		},
		"583": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "__type"
		},
		"584": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "__type"
		},
		"585": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "request"
		},
		"586": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "body"
		},
		"587": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "TUserId"
		},
		"588": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "TGridId"
		},
		"589": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "SetResponseHandler"
		},
		"590": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "__type"
		},
		"591": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "__type"
		},
		"592": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "response"
		},
		"593": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageServiceOptions"
		},
		"594": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageServiceOptions.userId"
		},
		"595": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageServiceOptions.gridId"
		},
		"596": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageServiceOptions.getPostRoute"
		},
		"597": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageServiceOptions.beforeGetRequest"
		},
		"598": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageServiceOptions.getResponseHandler"
		},
		"599": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageServiceOptions.setPostRoute"
		},
		"600": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageServiceOptions.beforeSetRequest"
		},
		"601": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageServiceOptions.setResponseHandler"
		},
		"602": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageServiceOptions.TUserId"
		},
		"603": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageServiceOptions.TGridId"
		},
		"604": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageService"
		},
		"605": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageService.__constructor"
		},
		"606": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageService"
		},
		"607": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageService.TUserId"
		},
		"608": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageService.TGridId"
		},
		"609": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "options"
		},
		"610": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageService.options"
		},
		"611": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageService.getGridStateAsync"
		},
		"612": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageService.getGridStateAsync"
		},
		"613": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageService.setGridStateAsync"
		},
		"614": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageService.setGridStateAsync"
		},
		"615": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "gridState"
		},
		"616": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageService.TUserId"
		},
		"617": {
			"sourceFileName": "dist/types/Storage.d.ts",
			"qualifiedName": "ServerSideStorageService.TGridId"
		}
	}
}