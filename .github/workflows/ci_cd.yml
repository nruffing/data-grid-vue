name: CI/CD

on:
  workflow_dispatch:
  push:
    branches: [ "**" ]

permissions:
  id-token: write
  contents: write

env:
  VERSION: ''
  EXISTING_VERSIONS: ''

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v4
    - name: Install pnpm
      uses: pnpm/action-setup@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        registry-url: 'https://registry.npmjs.org'
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - run: pnpm run ci-all
    - name: Parse package version
      run: echo "VERSION=$(grep -Po '(?<=\"version\":\s\")\d+\.\d+\.\d+(?=\")' ./package.json)" >> $GITHUB_ENV
    - name: Get existing versions from NuGet
      run: echo "EXISTING_VERSIONS=$(pnpm show data-grid-vue versions --json | tr -d '\r\n ')" >> $GITHUB_ENV
    - name: Publish if new version
      if: env.VERSION != '' && fromJson(env.EXISTING_VERSIONS) != 0 && (contains(fromJson(env.EXISTING_VERSIONS).versions, env.VERSION) == false)
      run: npm publish --provenance
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    outputs:
      should_publish: ${{ env.VERSION != '' && fromJson(env.EXISTING_VERSIONS) != 0 && (contains(fromJson(env.EXISTING_VERSIONS).versions, env.VERSION) == false) }}
 
  create_release:
    runs-on: ubuntu-latest
    needs: [build]
    if: fromJson(needs.build.outputs.should_publish)
    env:
      ESCAPED_VERSION: ''
    steps:
      - uses: actions/checkout@v4
      - name: Escape version
        run: echo "ESCAPED_VERSION=$(echo "${{ env.VERSION }}" | sed 's/[^^]/[&]/g; s/\^/\\^/g')" >> $GITHUB_ENV
      - name: Parse release notes
        run: (grep -Pzo '(?<=### v${{ env.ESCAPED_VERSION }}\n)\X+?(?=\n\n)' ./vuepress/docs/shared/changelog.md)) | tr -d '\0' > release_notes.txt
      - name: Create release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: v${{ env.VERSION }}
          body_path: ${{ github.workspace }}/release_notes.txt
