name: CI/CD

on:
  push:
    branches: [ "**" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v4
    - name: Install pnpm
      uses: pnpm/action-setup@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - run: pnpm run ci-all
    
  newVersion:
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: MontyD/package-json-updated-action@1.0.1
        id: version-updated
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      versionUpdated: ${{ steps.version-updated.outputs.has-updated }}
      version: ${{ steps.version-updated.outputs.current-package-version }}
      
  publish:
    needs: newVersion
    if: ${{ needs.newVersion.outputs.versionUpdated }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
 
  create_release:
    runs-on: ubuntu-latest
    needs: [publish, newVersion]
    permissions:
      contents: write
    env:
      ESCAPED_VERSION: ''
    steps:
      - uses: actions/checkout@v4
      - name: Escape version
        run: echo "ESCAPED_VERSION=$(echo "${{ needs.newVersion.outputs.version }}" | sed 's/[^^]/[&]/g; s/\^/\\^/g')" >> $GITHUB_ENV
      - name: Parse release notes
        run: (grep -Pzo '(?<=### v${{ env.ESCAPED_VERSION }}\n)\X+?(?=\n\n)' ./vuepress/docs/shared/changelog.md)) | tr -d '\0' > release_notes.txt
      - name: Create release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.newVersion.outputs.version }}
          release_name: v${{ needs.newVersion.outputs.version }}
          body_path: ${{ github.workspace }}/release_notes.txt
